<?xml version="1.0" encoding="UTF-8"?>
<!-- ############################################################################################# 
	Created By Krunal Date 13-06-2016 Purpose : Sending SMS/OTP generation/OTP 
	Verification Supporting Vendor : 1: ValueFirst 2: Gupshup 3: Both Database 
	: ESB_GenerateOTP TableName :OtpGeneration Request Json : { "MethodId": "2", 
	"VendorId": "2", "UID": "11", "CustomerMobileNo": "9730109298", "EventId": 
	"", "VerifyParam": { "RequestId": "33", "OtpPin": "832863" }, "NotifyParam": 
	{ "TemplateId": "14", "@TransID": "", "@CustID": "", "@MobileNo": "" } } 
	JSON Response for OTP : { "RequestId": "2099" :Methodid=1 "AuthCode": "2099" 
	:Methodid=2 "ResponseMessage": "Info" "DisplayMessage": "OTP Verified Successfully" 
	"ResponseCode": "000" } ############################################################################################# -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd        http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">
    <!-- PID Declaration -->
    <cm:property-placeholder persistent-id="com.finopaytech"/>
    <!-- PID Declaration Ends -->
    <!-- Bean Declaration -->
    <bean class="com.finopaytech.ESB_GenerateOTP.OtpGeneration" id="otpService"/>
    <bean class="com.finopaytech.ESB_GenerateOTP.RetriveQueData" id="queData"/>
    <bean
        class="com.finopaytech.ESB_GenerateOTP.EncryptionDecryptionBean" id="decOtpQue"/>
    <bean class="com.finopaytech.ESB_GenerateOTP.FinoHeaderFilter" id="finoHeaderFilter"/>
    <bean class="com.finopaytech.ESB_GenerateOTP.MyHttpClientConfigurer" id="myHttpClientConfigurer"/>
    <!-- Bean Declaration Ends -->
    <!-- ActiveMQ Declaration -->
    <!-- For Fabric -->
    <bean class="org.apache.activemq.ActiveMQConnectionFactory" id="jmsConnectionFactory">
        <property name="brokerURL" value="${smsexternalamqbrokerurl}"/>
        <property name="userName" value="admin"/>
        <property name="password" value="esbadmin@123"/>
    </bean>
    <bean class="org.apache.camel.component.jms.JmsComponent" id="activemq">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>
    <bean class="org.apache.activemq.ActiveMQConnectionFactory" id="jmsConnectionFactory1">
        <property name="brokerURL" value="${smsexternalamqbrokerurl}"/>
        <property name="userName" value="admin"/>
        <property name="password" value="esbadmin@123"/>
    </bean>
    <bean class="org.apache.camel.component.jms.JmsComponent" id="activemqexternal">
        <property name="connectionFactory" ref="jmsConnectionFactory1"/>
    </bean>
    <!-- For Fabric End -->
    <!-- For OSGi -->
    <!--   <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent"> 
		<property name="brokerURL" value="tcp://localhost:61616?jms.useAsyncSend=true" 
		/> <property name="userName" value="admin" /> <property name="password" value="admin" 
		/> </bean> <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory"> 
		<property name="brokerURL" value="vm://localhost?broker.persistent=false" 
		/> </bean> <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory" 
		init-method="start" destroy-method="stop"> <property name="maxConnections" 
		value="6" /> <property name="connectionFactory" ref="jmsConnectionFactory" 
		/> </bean> <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"> 
		<property name="connectionFactory" ref="pooledConnectionFactory" /> </bean>  -->
    <!-- For OSGi End -->
    <!-- For OSGi -->
    <!--  <bean id="activemqexternal" class="org.apache.activemq.camel.component.ActiveMQComponent"> 
		<property name="brokerURL" value="${smsamqbrokerurl}" /> <property name="userName" 
		value="admin" /> <property name="password" value="esbadmin@123" /> </bean> 
		<bean id="jmsConnectionFactory1" class="org.apache.activemq.ActiveMQConnectionFactory"> 
		<property name="brokerURL" value="vm://localhost?broker.persistent=false" 
		/> </bean> <bean id="pooledConnectionFactory1" class="org.apache.activemq.pool.PooledConnectionFactory" 
		init-method="start" destroy-method="stop"> <property name="maxConnections" 
		value="6" /> <property name="connectionFactory" ref="jmsConnectionFactory1" 
		/> </bean> <bean id="jmsTemplate1" class="org.springframework.jms.core.JmsTemplate"> 
		<property name="connectionFactory" ref="pooledConnectionFactory1" /> </bean>  -->
    <!-- ActiveMQ Declaration Ends -->
    <!-- DataSource Declaration -->
    <bean class="org.apache.commons.dbcp.BasicDataSource" id="esbDataSource">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
        <property name="url" value="jdbc:sqlserver://${ESB_SMSSERVICE_DB}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>
    <bean class="org.apache.camel.component.sql.SqlComponent" id="sql">
        <property name="dataSource" ref="esbDataSource"/>
    </bean>
    <!-- DataSource Declaration Ends -->
    <!-- Restlet Component Declaration -->
    <bean class="org.apache.camel.component.restlet.RestletComponent" id="restlet">
        <property name="maxThreads" value="5000"/>
    </bean>
    <!-- Restlet Component Declaration Ends -->
    <!-- SMSService CamelContext Declaration -->
    <camelContext id="Ctx_RT1_GenerateOTP" streamCache="true"
        useMDCLogging="true" xmlns="http://camel.apache.org/schema/blueprint">
        <!-- Json Dataformats Declaration -->
        <dataFormats>
            <json id="js" library="Jackson"/>
        </dataFormats>
        <!-- Json Dataformats Declaration Ends -->
        <!--#### Rout identifier -->
        <route id="RT1_GenerateOTP" streamCache="true">
            <from id="_from1" uri="restlet:http://{{esbHost}}:{{ESB_GenerateOTP}}/esb/generate/otp?restletMethod=POST"/>
            <bean id="_bean1" method="processLog" ref="otpService"/>
            <removeHeaders id="_removeHeaders1" pattern="Camel*"/>
            <removeHeader headerName="charset" id="_removeHeader1"/>
            <removeHeader headerName="org.restlet.http.headers" id="_removeHeader2"/>
            <removeHeader headerName="org.restlet.startTime" id="_removeHeader3"/>
            <log id="_log1" logName="com.fino.asynclog"
                loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST RECIEVED FROM USER_"/>
            <doTry id="_doTry1">
                <setHeader headerName="OTPLength" id="_setHeader1">
                    <simple>{{OTPLength}}</simple>
                </setHeader>
                <setHeader headerName="CamelHttpMethod" id="_setHeader2">
                    <constant>POST</constant>
                </setHeader>
                <setHeader headerName="Content-Type" id="_setHeader3">
                    <constant>application/x-www-form-urlencoded</constant>
                </setHeader>
                <setHeader headerName="methodId" id="_setHeader4">
                    <jsonpath>$.MethodId</jsonpath>
                </setHeader>
                <setHeader headerName="inputCustomerMobileNo" id="_setHeader5">
                    <jsonpath>$.CustomerMobileNo</jsonpath>
                </setHeader>
                <setHeader headerName="EventId" id="_setHeader6">
                    <jsonpath>$.EventId</jsonpath>
                </setHeader>
                <setHeader headerName="DashBoard_Logging_Flag" id="_setHeader7">
                    <simple>{{DashBoard_Logging_Flag}}</simple>
                </setHeader>
                <setHeader headerName="OTP_MESSAGE_USERNAME" id="_setHeader8">
                    <simple>{{OTP_MESSAGE_USERNAME}}</simple>
                </setHeader>
                <setHeader headerName="OTP_MESSAGE_PASSWORD" id="_setHeader9">
                    <simple>{{OTP_MESSAGE_PASSWORD}}</simple>
                </setHeader>
                <setHeader headerName="GUPSHUP_MESSAGE_USERNAME" id="_setHeader10">
                    <simple>{{GUPSHUP_MESSAGE_USERNAME}}</simple>
                </setHeader>
                <setHeader headerName="GUPSHUP_MESSAGE_PASSWORD" id="_setHeader11">
                    <simple>{{GUPSHUP_MESSAGE_PASSWORD}}</simple>
                </setHeader>
                <setHeader headerName="otpExpiaryTime" id="_setHeader12">
                    <simple>{{otpExpiaryTime}}</simple>
                </setHeader>
                <setHeader headerName="QueueTimeOut" id="_setHeader13">
                    <simple>{{QueueTimeOut}}</simple>
                </setHeader>
                <setHeader headerName="ValueFirst_SMS_UserID2" id="_setHeader14">
                    <simple>{{ValueFirst_SMS_UserID2}}</simple>
                </setHeader>
                <setHeader headerName="ValueFirst_SMS_PWD2" id="_setHeader15">
                    <simple>{{ValueFirst_SMS_PWD2}}</simple>
                </setHeader>
                <setHeader headerName="GUPSHUP_SMS_UserID2" id="_setHeader16">
                    <simple>{{GUPSHUP_SMS_UserID2}}</simple>
                </setHeader>
                <setHeader headerName="GUPSHUP_SMS_PWD2" id="_setHeader17">
                    <simple>{{GUPSHUP_SMS_PWD2}}</simple>
                </setHeader>
                <choice id="_choice1">
                    <!-- #### MethodId 1 is for OTP generation -->
                    <when id="_when1">
                        <simple>${header.methodId} == '1'</simple>
                       <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Inside Method Id 1"></log>
                        <setHeader headerName="ESBReqType" id="_setHeader18">
                            <simple>OTP</simple>
                        </setHeader>
                        <setHeader headerName="OrgBody" id="_setHeader19">
                            <simple>${body}</simple>
                        </setHeader>
                        <choice id="_choice2">
                            <when id="_when2">
                                <simple>${header.DashBoard_Logging_Flag} == 'Y'</simple>
                                <!-- <wireTap uri="direct:smsServiceDashBoard" /> -->
                                <setBody id="_setBody1">
                                    <simple>{"Method_ID":"1","Layer_ID":"4","Request_Flag":"1","Response_Flag":"0","Correlation_Request":"${header.X-Correlation-Id}","Correlation_Session":"","Node_IP_Address": "{{esbHost}}","RequestIn": "${date:now:yyyy-MM-dd HH:mm:ss.SSS}","RequestOut": null,"Response_Message": "","Status_Code": "","Service_ID": "10"}</simple>
                                </setBody>
                                <to id="_to1" uri="seda:smsServiceDashBoard?waitForTaskToComplete=Never"/>
                            </when>
                        </choice>
                        <setBody id="_setBody2">
                            <simple>${header.OrgBody}</simple>
                        </setBody>
                        <removeHeader headerName="NonExpiredOTPFlag" id="_removeHeader4"/>
                        <removeHeader headerName="OrgBody" id="_removeHeader5"/>
                        <removeHeader headerName="ExpiredRequestId" id="_removeHeader6"/>
                        <bean id="_bean2" method="getOtp" ref="otpService"/>
                        <!-- Placeholders for OTP -->
                        <doTry id="_doTry2">
                            <setHeader headerName="templateId" id="_setHeader20">
                                <jsonpath>$.NotifyParam.TemplateId</jsonpath>
                            </setHeader>
                            <doCatch id="_doCatch1">
                                <exception>java.lang.Exception</exception>
                                <setHeader headerName="templateId" id="_setHeader21">
                                    <simple>42</simple>
                                </setHeader>
                            </doCatch>
                        </doTry>
                        <choice id="_choice3">
                            <when id="_when3">
                                <simple>${header.templateId.toString().trim()} == null or ${header.templateId.toString().trim().length()} == 0 </simple>
                                <setHeader headerName="templateId" id="_setHeader22">
                                    <simple>42</simple>
                                </setHeader>
                            </when>
                        </choice>
                        <setHeader headerName="orgBody" id="_setHeader23">
                            <simple>${body}</simple>
                        </setHeader>
                        <doTry id="_doTry3">
                            <unmarshal id="_unmarshal1" ref="js"/>
                            <setHeader headerName="notifyParamBody" id="_setHeader24">
                                <simple>${body[NotifyParam]}</simple>
                            </setHeader>
                            <setBody id="_setBody3">
                                <simple>${header.notifyParamBody}</simple>
                            </setBody>
                            <marshal id="_marshal1" ref="js"/>
                            <!-- <convertBodyTo type="java.lang.String"/> -->
                            <unmarshal id="_unmarshal2" ref="js"/>
                            <setHeader headerName="NotifyHeaders" id="_setHeader25">
                                <simple>${body}</simple>
                            </setHeader>
                            <setHeader headerName="AcctNo" id="_setHeader253">
                                <simple>${body[@AccountNo]}</simple>
                            </setHeader>
                            <setHeader headerName="amountSmallCase" id="_Set_amountSmallCase">
                                <simple>${body[@amount]}</simple>
                            </setHeader>
                            <setHeader headerName="Amount" id="_SetAmount">
                                <simple>${body[@Amount]}</simple>
                            </setHeader>
                            <setHeader headerName="CardNumber" id="_SetCardNumber">
                                <simple>${body[@CardNumber]}</simple>
                            </setHeader>
                            <setHeader headerName="BenefiAccountNo" id="_setHeader92_BenefiAccountNo">
                                <simple>${body[@BenefiAccountNo]}</simple>
                            </setHeader>
                            <setHeader headerName="Benename" id="_setHeader93_Benename">
                                <simple>${body[@Benename]}</simple>
                            </setHeader>
                            <setHeader headerName="CustomerCareNo" id="_setHeader254">
                                <simple>${body[@CustomerCareNo]}</simple>
                            </setHeader>
                            <setHeader headerName="NomineeName" id="_setHeader92_NomineeName">
                                <simple>${body[@NomineeName]}</simple>
                            </setHeader>
                            <log id="_log6" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP TemplateId From Headers Map ${header.NotifyHeaders[TemplateId]}"/>
                            <doCatch id="_doCatch2">
                                <exception>java.lang.Exception</exception>
                                <log id="_log8" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP exception occured while getting notify headers : ${exception.stacktrace}"/>
                            </doCatch>
                        </doTry>
                        <setBody id="_setBody4">
                            <simple>${header.orgBody}</simple>
                        </setBody>
                        <removeHeader headerName="orgBody" id="_removeHeader7"/>
                        <!--<setHeader headerName="CamelRetrieveGeneratedKeys"> <simple>true</simple> 
							</setHeader> -->
                        <!-- #### It inserts CustomerMobileNo,OtpPin,OtpCreateDate,isConsumed 
							in OtpGeneration Table -->
                        <!-- <setBody> <simple>insert into OtpGeneration(CustomerMobileNo,OtpPin,OtpCreateDate,isConsumed) 
							values ('${header.customerMobNo}','${header.otpPin}',getDATE(),0)</simple> 
							</setBody> <to uri="jdbc:esbDataSource" /> -->
                        <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
                        <setHeader headerName="otpPin" id="_setHeader26">
                            <simple>${header.otpPin}</simple>
                        </setHeader>
                        <setHeader headerName="customerMobNo" id="_setHeader27">
                            <jsonpath>$.CustomerMobileNo</jsonpath>
                        </setHeader>
                        <bean id="_bean3" method="setInsertQuery" ref="otpService"/>
                        <setBody id="_setBody5">
                            <simple>${header.insQuery}</simple>
                        </setBody>
                        <removeHeader headerName="insQuery" id="_removeHeader8"/>
                        <log id="_log9" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP before insert query"/>
                        <to id="_to2" uri="jdbc:esbDataSource"/>
                        <log id="_log10" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP after insert query"/>
                        <to id="_to3" uri="sql:select top 1 RequestId,OtpPin from OtpGeneration with(nolock) where CustomerMobileNo =:#${header.customerMobNo} and isConsumed='0' and (datediff(ss,OtpCreateDate,getdate()) &lt; 180) order by OtpCreateDate desc "/>
                        <log id="_log11" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP after select query"/>
                        <bean id="_bean4" method="getID" ref="otpService"/>
                        <setHeader headerName="DB_ID" id="_setHeader28">
                            <simple>${header.DB_ID}</simple>
                        </setHeader>
                        <log id="_log12" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP DB_ID:::::::::::::::${header.DB_ID}"/>
                        <setBody id="_setBody6">
                            <simple>{"RequestId":"${header.DB_ID}","CustomerMobileNo":"${header.customerMobNo}","OtpPin":"${header.otpPin}"}</simple>
                        </setBody>
                        <doTry id="_doTry4">
                            <!-- <setHeader headerName="templateId"> <simple>42</simple> </setHeader> -->
                            <bean id="_bean5" method="setEvenOdd_Queue" ref="otpService"/>
                            <!--<log id="_log13" message="Body Before Queue Insertion .. _ ${body}"/>-->
                            <choice id="_choice4">
                                <when id="_when4">
                                    <simple>${header.queueValue} == '0'</simple>
                                    <log id="_log14" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP inside even queue${header.DB_ID} "/>
                                    <to id="_to4" pattern="InOnly" uri="activemq:queue:SMSQueue?timeToLive={{otpExpiaryTime}}"/>
                                    <log id="_log15" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP after even queue call"/>
                                </when>
                                <otherwise id="_otherwise1">
                                    <log id="_log16" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP inside odd queue${header.DB_ID} "/>
                                    <to id="_to5" pattern="InOnly" uri="activemq:queue:SMSQueue_ODD?timeToLive={{otpExpiaryTime}}"/>
                                    <log id="_log17" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP after odd queue call"/>
                                </otherwise>
                            </choice>
                            <doCatch id="_doCatch3">
                                <exception>java.lang.Exception</exception>
                                <log id="_log18" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP AMQ Exception occure ::${exception}"/>
                                <to id="_to6" pattern="InOnly" uri="activemqexternal:queue:SMSQueue?timeToLive={{otpExpiaryTime}}"/>
                            </doCatch>
                            <doFinally id="_doFinally1">
                                <removeHeader headerName="ESBReqType" id="_removeHeader9"/>
                            </doFinally>
                        </doTry>
                        <log id="_log20" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP before select query"/>
                        <to id="_to7" uri="sql:select MsgTemplate,FallbackFlag,VendorId,MsgTemplate_Hindi from MessageTemplate where TemplateId =:#${header.templateId}"/>
                        <log id="_log21" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP after select query"/>
                        <bean id="_bean6" method="getTemplete" ref="otpService"/>
                        <setHeader headerName="encodedTempleteId" id="_setHeader29">
                            <simple>${header.MsgTemplate}</simple>
                        </setHeader>
                        <bean id="_bean7" method="gupShup" ref="otpService"/>
                       
                 <choice id="_choice5">
                    
                    <when id="_when46">
                            <simple>${header.VendorId} == '1'</simple>
                             <bean id="_bean008" method="valueFirst" ref="otpService"/>
                             <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP ValueFirst bean call."/>
                             <!--Call a method for fall back ###### -->
                             <bean id="_bean34" method="hindiSMSCheck" ref="otpService"/>
                             <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP DoubleSMSFlag  ${header.DoubleSMSFlag}"/>
                             <choice id="_choice31">
                                <when id="_when47">
                                   <simple>${header.DoubleSMSFlag} == 'Y'</simple>
                                    <bean id="_bean8" method="valuefirstHindi" ref="otpService"/>
                                    <choice>
										<when>
											<simple>${header.templeteMessage} != null and  ${header.templeteMessage} != '' and ${header.templeteMessage.length()} &gt; {{SMSLentgh}}</simple>
											   <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP SMS Length proper_VF English" />
									  
									         <setHeader headerName="message" id="_setHeader30">
                                                 <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                              </setHeader>
                                     		 <bean id="_bean9" method="encodeURL" ref="otpService"/>
                                    		<setHeader headerName="CamelHttpMethod" id="_setHeader31">
                                       			<constant>POST</constant>
                                    		</setHeader>
                                    		<setHeader headerName="Content-Type" id="_setHeader32">
                                     			 <constant>application/x-www-form-urlencoded</constant>
                                    		</setHeader>
                                    		<!-- Call a method for fall back -->
                                    		<log id="_log24" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                                    		<to id="_to8" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                    		<log id="_log25" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Response RECEIVED FROM VALUEFIRST_VENDOR_${body}"/>
                               
									  </when>
									  <otherwise>
									     <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP English SMS Not Send ValueFirst "/>
									  </otherwise>
									  </choice>		   

                                    <removeHeader headerName="message" id="_removeHeader42"/>
                                      <choice>
										<when>
											<simple>${header.templeteMessageHindi} != null and  ${header.templeteMessageHindi} != '' and ${header.templeteMessageHindi.length()} &gt; {{SMSLentgh}}</simple>
											   <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP SMS Length proper_VF Hindi" />
                                               <setHeader headerName="message" id="_setHeader255">
                                                  <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessageHindi}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                               </setHeader>
	                                           <bean id="_bean9_Hindi" method="encodeURL" ref="otpService"/>
                                               <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}"/> -->
                                               <setHeader headerName="CamelHttpMethod" id="_setHeader256">
                                                 <constant>POST</constant>
                                               </setHeader>
                                               <setHeader headerName="Content-Type" id="_setHeader32_Hindi">
                                                 <constant>application/x-www-form-urlencoded</constant>
                                               </setHeader>
                                               <!-- Call a method for fall back -->
                                               <log id="_log24_Hindi" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                                      
                                               <to id="_to8_Hindi" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                              
                                               <log id="_log2_Hindi" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Response RECEIVED FROM VALUEFIRST_VENDOR_${body}"/>
                                          </when>
                                           <otherwise>
									         <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Hindi SMS Not Send ValueFirst "/>
									       </otherwise>
                                       </choice>
                                   </when>
   
                                <otherwise id="_otherwise22">
                                   <choice>
                                       <when>
                                        <simple>${header.templeteMessage} != null and  ${header.templeteMessage} != '' and ${header.templeteMessage.length()} &gt; {{SMSLentgh}}</simple>
										<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP SMS Length proper_VF English" />
 									   <setHeader headerName="message" id="_setHeader0130">
                                         <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                       </setHeader>
                                       <!-- <removeHeader headerName="message"></removeHeader> -->
                                       <bean id="_bean41" method="encodeURL" ref="otpService"/>
                                       <setHeader headerName="CamelHttpMethod" id="_setHeader180">
                                         <constant>POST</constant>
                                       </setHeader>
                                       <setHeader headerName="Content-Type" id="_setHeader181">
                                         <constant>application/x-www-form-urlencoded</constant>
                                        </setHeader>
                                       <removeHeader headerName="Content-Length" id="_removeHeader20"/>
                                       <removeHeader headerName="ActualBody" id="_removeHeader21"/>
                                       <!--  <removeHeader headerName="MsgTemplate" id="_removeHeader22"/> -->
                                       <to id="_to42" uri="log:before?showHeaders=true"/>
                                       <log id="_log91" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO VALUEFIRST_VENDOR_Printed header replacedTemplate"/>
                                       <to id="_to43" uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}"/>
 									    <log id="_log91" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECIVIED FROM VALUEFIRST_VENDOR_Printed header replacedTemplate ...${body}"/>
 								  	  </when>
 									 <otherwise>
									     <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP English SMS Not Send ValueFirst "/>
									  </otherwise>                          
                                  </choice>
                                </otherwise>
                             </choice>
                            
                            <bean id="_bean42" method="getfallFlag" ref="otpService"/>
                            <when id="_when49">
                                <simple> ${header.FailureFlag} == '1'</simple>
                               
                                <bean id="_bean43" method="encodedStr" ref="otpService"/>
                                <setBody id="_setBody50">
                                    <simple>method=SendMessage&amp;send_to=${header.inputCustomerMobileNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=</simple>
                                </setBody>
                                <setHeader headerName="CommomMsg" id="_setHeader182">
                                    <simple>${body}</simple>
                                </setHeader>
                                <log id="_log92" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO GUPSHUP_VENDOR_"/>
                                <doTry id="_doTry14">
                                    <setHeader headerName="CamelHttpMethod" id="_setHeader183">
                                       <constant>POST</constant>
                                    </setHeader>
                                    <setHeader headerName="Content-Type" id="_setHeader184">
                                       <constant>application/x-www-form-urlencoded</constant>
                                    </setHeader>
                                    <log id="_log93" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Fallback__Send to GUPSHUP_Body----${body}"/>
                                    <to id="_to44" uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}"/>
                                    <log id="_log94" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Fallback__Received GUPSHUP_Body----${body}"/>
                                    <setHeader headerName="DbRemark" id="_setHeader185">
                                       <simple>Message Sent by Gupshup Vendor</simple>
                                    </setHeader>
                                    <bean id="_bean44" method="getGupShupParameters" ref="otpService"/>
                                    <to id="_to45" uri="seda:DBInsertionSMSLog?waitForTaskToComplete=Never"/>
                                    <doCatch id="_doCatch13">
                                       <exception>java.lang.Exception</exception>
                                       <log id="_log95" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Fallback_EXCEPTION  ${exception.stacktrace}"/>
                                       <setBody id="_setBody51">
                                         <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                       </setBody>
                                    </doCatch>
                                </doTry>
                            </when>
                            <otherwise id="_otherwise23">
                                <log id="_log96" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP SMS_TO_BE_LOGGED_SENT_SUCESSFULLY_ValueFirstres_${header.templateId}_${header.replacedTemplate}_${header.inputCustomerMobileNo}"/>
                                <setHeader headerName="Content-Type" id="_setHeader186">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody52">
                                    <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                </setBody>
                                <!--<wireTap uri="direct:SMSDbLogging"/> -->
                            </otherwise>
                        </when>
                        
                            <when id="_when9">
                                 <simple>${header.VendorId} == '2'</simple>
                                 <log id="_log42" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP GUPSHUP_VENDOR_2"/>
                                   <bean id="_bean45" method="hindiSMSCheck" ref="otpService"/>
                                   <!-- === Call a method for fall back -->
                                   <choice id="_choice032">
                                     <when id="_when051">
                                          <simple>${header.DoubleSMSFlag} == 'Y'</simple>
                                          <!--<bean id="_bean47" method="encodedStrHindi" ref="otpService"/> -->
                                          <bean id="_bean46" method="notificationReplacementHindi" ref="otpService"/>
                                          <bean id="_bean13" method="gupShup" ref="otpService"/>
                                          
                                          <choice>
                                            <when>
                                               <simple>${header.encodedGupshupMessageHindi} != null and  ${header.encodedGupshupMessageHindi} != '' and ${header.encodedGupshupMessageHindi.length()} &gt; {{SMSLentgh}}</simple>
												<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | SMS Length proper_GupShup " />
                                            
                                            <setBody id="_setBody13">
                                            <simple>method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessageHindi}&amp;msg_type=Unicode_Text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=</simple>
                                          </setBody>  
                                          <setHeader headerName="CamelHttpMethod" id="_setHeader40">
                                            <constant>POST</constant>
                                          </setHeader>
                                          <setHeader headerName="Content-Type" id="_setHeader41">
                                            <constant>application/x-www-form-urlencoded</constant>
                                          </setHeader>
                                            <log id="_log38" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO GUPSHUP_VENDORForHindi_${body}" logName="com.fino.asynclog" loggingLevel="INFO"/>
                                            <to id="_to4900" uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}"/>
                                            <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM GUPSHUP_VENDORForHindi_${body}" id="_log41" logName="com.fino.asynclog" loggingLevel="INFO"/>
                                            </when>
                                          </choice>
                                          <choice>
											 <when>
												<simple>${header.encodedGupshupMessage} != null and  ${header.encodedGupshupMessage} != '' and ${header.encodedGupshupMessage.length()} &gt; {{SMSLentgh}}</simple>
												<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | SMS Length proper_GupShup " />
                                       			<setBody id="_setBody14">
                                         			<simple>method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=Text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=</simple>
                                       			</setBody>
                                      			<setHeader headerName="CamelHttpMethod" id="_setHeader42">
                                         			<constant>POST</constant>
                                       			</setHeader>
                                      		 	<setHeader headerName="Content-Type" id="_setHeader43">
                                         			<constant>application/x-www-form-urlencoded</constant>
                                       			</setHeader>
                                       			<log id="_log41" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO GUPSHUP_VENDORForEnglish_${body}"/>
                                      			<to id="_to490" uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}"/>
                                                <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM GUPSHUP_VENDORForEnglish_${body}" id="_log41" logName="com.fino.asynclog" loggingLevel="INFO"/>
                                              </when>
                                          </choice>
                                    </when>
                                    <otherwise id="_otherwise3">
                                        <choice>
											 <when>
												<simple>${header.encodedGupshupMessage} != null and  ${header.encodedGupshupMessage} != '' and ${header.encodedGupshupMessage.length()} &gt; {{SMSLentgh}}</simple>
												<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | SMS Length proper_GupShup_OnlyEnglish " />
                                                <setBody id="_setBody15">
                                                  <simple>method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=Text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=</simple>
                                                </setBody>
                                                <setHeader headerName="CamelHttpMethod" id="_setHeader44">
                                                   <constant>POST</constant>
                                                </setHeader>
                                                <setHeader headerName="Content-Type" id="_setHeader45">
                                                   <constant>application/x-www-form-urlencoded</constant>
                                                </setHeader>
                                                <log id="_log42" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO GUPSHUP_VENDOR_OnlyEnglish"/>
                                                <to id="_to4090" uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}"/>
                                                <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM GUPSHUP_VENDOR_OnlyEnglish ${body}" id="_log41" logName="com.fino.asynclog" loggingLevel="INFO"/>
                                                <removeHeader headerName="CustID" id="_removeHeader10"/>
                                                <removeHeader headerName="encodedGupshupMessage" id="_removeHeader11"/>
                                                <removeHeader headerName="inputCustomerMobileNo" id="_removeHeader12"/>
                                                <removeHeader headerName="MesageTemplate" id="_removeHeader13"/>
                                              </when>
                                         </choice>
                                    </otherwise>
                                  </choice>
                                	<log id="_log43" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM GUPSHUP_VENDOR__${body}"/>
                               	 	<bean id="_bean14" method="getfallFlag" ref="otpService"/>
                                     <when id="_when10">
                                         <simple> ${header.FailureFlag} == '1'</simple>
                                           <choice id="_choice7">
                                              <when id="_when11">
                                                  <simple>${header.FallbackFlag} == '1' </simple>
                                                  <bean id="_bean15" method="valueFirst" ref="otpService"/>
                                                  <setHeader headerName="message" id="_setHeader46">
                                                       <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                                  </setHeader>
                                                  <setHeader headerName="CamelHttpMethod" id="_setHeader47">
                                                     <constant>POST</constant>
                                                  </setHeader>
                                                 <setHeader headerName="Content-Type" id="_setHeader48">
                                                    <constant>application/x-www-form-urlencoded</constant>
                                                 </setHeader>
                                                 <log id="_log46" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                                                 <doTry id="_doTry8">
                                                      <!-- ********** check ValueFirst response message -->
                                                     <log id="_log47" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SENT TO VALUEFIRST_VENDOR_"/>
                                                     <to id="_to11" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                                     <log id="_log48"  logName="com.fino.asynclog"  loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM VALUEFIRST_VENDOR_${body}"/>
                                                     <bean id="_bean16" method="checkVendorResponseCodeForValueFirst" ref="otpService"/>
                                                  <doCatch id="_doCatch8">
                                    	             <exception>java.net.SocketTimeoutException</exception>
                                    	             <setHeader  headerName="CamelHttpResponseCode" id="_setHeader49">
                                    		              <simple>998</simple>
                                    	             </setHeader>
                                    	             <log id="_log50" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                                    	             <setBody id="_setBody16">
                                    		            <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                                    	            </setBody>
                                                 </doCatch>
                                                 <doCatch id="_doCatch9">
                                    	             <exception>java.lang.Exception</exception>
                                    	             <log id="_log51" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.XCorrelationId} | EXCEPTION  ${exception.stacktrace}"/>
                                    	             <setBody id="_setBody17">
                                    		           <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                    	             </setBody>
                                                 </doCatch>
                                                </doTry>
                                           </when>
                                          <otherwise id="_otherwise4"/>
                                        </choice>
                             </when>
                                <otherwise id="_otherwise5">
                                    <!-- <log message="GupShupRes::::${body}" /> -->
                                    <doTry id="_doTry9">
                                    <bean id="_bean17"
                                    method="getGupShupParameters" ref="otpService"/>
                                    <doCatch id="_doCatch10">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log52" message="exception : ${exception}"/>
                                    </doCatch>
                                    </doTry>
                                    <!-- <doTry> <log message="database log = X-Correlation-Id_${header.XCorrelationId} 
										| GUID = ${header.guid}| DBID = ${header.DB_ID}" loggingLevel="INFO" logName="com.fino.asynclog" 
										/> <to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} 
										, GUID=:#${header.gupShupParameter} where RequestId=:#${header.DB_ID}" /> 
										<doCatch> <exception>java.lang.Exception</exception> <log message="EXCEPTION 
										${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog"></log> 
										</doCatch> </doTry> -->
                                    <log id="_log53"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="gupShupParameter_${header.gupShupParameter}"/>
                                    <log id="_log54"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.XCorrelationId} |  RESPONSE RECEIVED _${body}"/>
                                    <setHeader
                                    headerName="XCorrelationId" id="_setHeader50">
                                    <simple>${header.X-Correlation-Id}</simple>
                                    </setHeader>
                                    <log id="_log55" message="X-Correlation-Id_${header.XCorrelationId} | ESB_GenerateOTP Before Insert Vendor Response GupShupParameter_${header.gupShupParameter}"/>
                                    <doTry id="_doTry10">
                                    <setBody id="_setBody18">
                                    <simple>insert into VendorResponse(CustomerMobileNo,X_CORRELATION_ID,GUID,OTPCreateDate,vendorId,WireTapName) values ('${header.customerMobNo}','${header.X-Correlation-Id}','${header.gupShupParameter}',getDATE(),'${header.VendorId}','GHUPSHUP')</simple>
                                    </setBody>
                                    <to id="_to12" uri="jdbc:esbDataSource"/>
                                    <doCatch id="_doCatch11">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log56" message="X-Correlation-Id_${header.XCorrelationId} | ${exception.stacktrace} in vendor insert"/>
                                    </doCatch>
                                    </doTry>
                                    <choice id="_choice8">
                                    <when id="_when12">
                                    <simple>${header.FailureFlag} == 0 or ${header.responseMessageValueFirst} == 0</simple>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader51">
                                    <simple>application/json</simple>
                                    </setHeader>
                                    <setBody id="_setBody19">
                                    <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                    </setBody>
                                    </when>
                                    <when id="_when13">
                                    <simple>${header.FailureFlag} == 1 or ${header.responseMessageValueFirst} == 1</simple>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader52">
                                    <simple>application/json</simple>
                                    </setHeader>
                                    <setBody id="_setBody20">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Generation failed"}</simple>
                                    </setBody>
                                    </when>
                                    </choice>
                                </otherwise>
                            </when>
                            <when id="_when14">
                                <simple>${header.VendorId} == '3'</simple>
                                <bean id="_bean18" method="valueFirst" ref="otpService"/>
                                <setHeader headerName="message" id="_setHeader53">
                                    <simple>

   
    &lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                </setHeader>
                                <bean id="_bean19" method="encodeURL" ref="otpService"/>
                                <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
									/> -->
                                <setHeader headerName="CamelHttpMethod" id="_setHeader54">
                                    <constant>POST</constant>
                                </setHeader>
                                <setHeader headerName="Content-Type" id="_setHeader55">
                                    <constant>application/x-www-form-urlencoded</constant>
                                </setHeader>
                                <!-- ********** check ValueFirst response message -->
                                <log id="_log57"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SENT TO VALUEFIRST_VENDOR_"/>
                                <to id="_to13" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                <log id="_log58"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM VALUEFIRST_VENDOR_${body}"/>
                                <bean id="_bean20"
                                    method="checkVendorResponseCodeForValueFirst" ref="otpService"/>
                                <log id="_log59" message="responseMessageValueFirst :${header.responseMessageValueFirst}"/>
                                <bean id="_bean21" method="gupShup" ref="otpService"/>
                                <setBody id="_setBody21">
                                    <simple>
     method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD}
     &amp;V=1.1&amp;format=text&amp;mask=
     </simple>
                                </setBody>
                                <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
									/> -->
                                <setHeader headerName="CamelHttpMethod" id="_setHeader56">
                                    <constant>POST</constant>
                                </setHeader>
                                <setHeader headerName="Content-Type" id="_setHeader57">
                                    <constant>application/x-www-form-urlencoded</constant>
                                </setHeader>
                                <!-- ********** check gupshup response message -->
                                <log id="_log60"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SEND TO GUPSHUP_VENDOR_${body}"/>
                                <to id="_to14" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{DEFAULT_TIMEOUT}}&amp;httpClient.connectTimeout={{DEFAULT_TIMEOUT}}"/>
                                <log id="_log61"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM GUPSHUP_VENDOR_${body}"/>
                                <bean id="_bean22"
                                    method="checkVendorResponseCodeForGupshup" ref="otpService"/>
                                <log id="_log62" message="responseMessageGupshup :${header.responseMessageGupshup}"/>
                                <otherwise id="_otherwise6">
                                    <choice id="_choice9">
                                    <when id="_when15">
                                    <simple>${header.responseMessageGupshup} == 0 or ${header.responseMessageValueFirst} == 0</simple>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader58">
                                    <simple>application/json</simple>
                                    </setHeader>
                                    <setBody id="_setBody22">
                                    <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                    </setBody>
                                    </when>
                                    <otherwise id="_otherwise7">
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader59">
                                    <simple>application/json</simple>
                                    </setHeader>
                                    <setBody id="_setBody23">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Generation failed"}</simple>
                                    </setBody>
                                    </otherwise>
                                    </choice>
                                </otherwise>
                            </when>
                            <when id="_when16">
                                <simple>${header.VendorId} == '9'</simple>
                                <!-- <wireTap uri="direct:smsServiceVendorCall" /> -->
                                <to id="_to15" uri="seda:smsServiceVendorCall?waitForTaskToComplete=Never"/>
                                <setHeader headerName="Content-Type" id="_setHeader60">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody24">
                                    <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                </setBody>
                                <!-- <doTry> ********** Call Value first Vendor start <bean ref="otpService" 
									method="valueFirst" /> <setHeader headerName="message"> <simple> &lt;?xml 
									version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE 
									VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS 
									UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS 
									FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt; 
									</simple> </setHeader> <bean ref="otpService" method="encodeURL" /> <removeHeaders 
									pattern="Camel*"></removeHeaders> <setHeader headerName="CamelHttpMethod"> 
									<constant>POST</constant> </setHeader> <setHeader headerName="Content-Type"> 
									<constant>application/x-www-form-urlencoded</constant> </setHeader> <log 
									message="ValueFirst req ${body}" /> <log message="X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_${body}" 
									loggingLevel="INFO" logName="com.fino.asynclog"/> <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
									/> <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} 
									| RESPONSE RECEIVED FROM VALUEFIRST_VENDOR_${body}" loggingLevel="INFO" logName="com.fino.asynclog"/> 
									********** check ValueFirst response message <bean ref="otpService" method="checkVendorResponseCodeForValueFirst"/> 
									<log message="responseMessageValueFirst :${header.responseMessageValueFirst}"></log> 
									********** Call Value first Vendor end <doTry> <log message="ValueFirstres::::${body}" 
									/> <setHeader headerName="guid"> <xpath resultType="java.lang.String">/MESSAGEACK/GUID/@GUID</xpath> 
									</setHeader> <log message="database log = X-Correlation-Id_${header.X-Correlation-Id} 
									| GUID = ${header.guid}| DBID = ${header.DB_ID}" loggingLevel="INFO" logName="com.fino.asynclog" 
									/> <to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.X-Correlation-Id} 
									, GUID=:#${header.guid} where RequestId=:#${header.DB_ID}" /> <doCatch> <exception>java.lang.Exception</exception> 
									<log message="EXCEPTION ${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog"></log> 
									</doCatch> </doTry> <doCatch> <exception>java.lang.Exception</exception> 
									<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} 
									| REQUEST SEND TO VALUEFIRST_VENDOR_EXCEPTION ${exception}" loggingLevel="INFO" 
									logName="com.fino.asynclog"/> <log message="X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_EXCEPTION 
									${exception.stacktrace}" loggingLevel="INFO" /> </doCatch> </doTry> <doTry> 
									********** SMS GupShup Vendor Call <bean ref="otpService" method="gupShup" 
									/> <setBody> <simple> method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD} 
									&amp;V=1.1&amp;format=text&amp;mask= </simple> </setBody> <removeHeaders 
									pattern="Camel*"></removeHeaders> <setHeader headerName="CamelHttpMethod"> 
									<constant>POST</constant> </setHeader> <setHeader headerName="Content-Type"> 
									<constant>application/x-www-form-urlencoded</constant> </setHeader> <log 
									message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} 
									| REQUEST SEND TO GUPSHUP_VENDOR_${body}" loggingLevel="INFO" logName="com.fino.asynclog"/> 
									<doTry> <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
									/> <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} 
									| RESPONSE RECEIVED FROM GUPSHUP_VENDOR_${body}" loggingLevel="INFO" logName="com.fino.asynclog"/> 
									********** check gupshup response message <bean ref="otpService" method="checkVendorResponseCodeForGupshup"/> 
									<log message="responseMessageGupshup :${header.responseMessageGupshup}"></log> 
									*********** Call GupShup Vendor end <doTry> <bean ref="otpService" method="getGupShupParameters" 
									/> <log message="gupShupParameter_${header.gupShupParameter}"/> <log message="database 
									GupShupRes log = X-Correlation-Id_${header.X-Correlation-Id} | GUID = ${header.guid}| 
									DBID = ${header.DB_ID}" loggingLevel="INFO" logName="com.fino.asynclog" /> 
									<to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.X-Correlation-Id} 
									, GUID=:#${header.gupShupParameter} where RequestId=:#${header.DB_ID}" /> 
									<doCatch> <exception>java.lang.Exception</exception> <log message="EXCEPTION 
									GupShupRes ${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog"></log> 
									</doCatch> </doTry> <doCatch> <exception>java.lang.Exception</exception> 
									<log message="EXCEPTION ${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog" 
									></log> <setBody><simple>{"ReturnCode": "999", "ResponseMessage": "Error 
									occurred"}</simple> </setBody> </doCatch> </doTry> <doCatch> <exception>java.lang.Exception</exception> 
									<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} 
									| REQUEST SEND TO GUPSHUP_VENDOR_EXCEPTION ${exception}" loggingLevel="INFO" 
									logName="com.fino.asynclog"/> <log message="X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_EXCEPTION 
									${exception.stacktrace}" loggingLevel="INFO" /> </doCatch> </doTry> <choice> 
									<when> <simple>${header.responseMessageGupshup} == 0 or ${header.responseMessageValueFirst} 
									== 0</simple> <setHeader headerName="Content-Type"> <simple>application/json</simple> 
									</setHeader> <setBody> <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP 
									Generated Successfully","ResponseCode":"000"}</simple> </setBody> </when> 
									<otherwise> <setHeader headerName="Content-Type"> <simple>application/json</simple> 
									</setHeader> <setBody> <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP 
									Generation failed"}</simple> </setBody> </otherwise> </choice> <setHeader 
									headerName="DashBoardResponse"> <jsonpath>$.ResponseCode</jsonpath> </setHeader> 
									<choice> <when> <simple>${header.DashBoardResponse} == '000'</simple> <setHeader 
									headerName="DashBoardResponse"> <simple>0</simple> </setHeader> </when> <otherwise> 
									<setHeader headerName="DashBoardResponse"> <simple>1</simple> </setHeader> 
									</otherwise> </choice> <setHeader headerName="OrgResBody"> <simple>${body}</simple> 
									</setHeader> <choice> <when> <simple>${header.DashBoard_Logging_Flag} == 
									'Y'</simple> <setBody> <simple>{"Method_ID":"1","Layer_ID":"4","Request_Flag":"0","Response_Flag":"1","Correlation_Request":"${header.X-Correlation-Id}","Correlation_Session":"","Node_IP_Address": 
									"{{esbHost}}","RequestIn":null ,"RequestOut": "${date:now:yyyy-MM-dd HH:mm:ss.SSS}","Response_Message": 
									"","Status_Code": "${header.DashBoardResponse}","Service_ID": "10"}</simple> 
									</setBody> <wireTap uri="direct:smsServiceDashBoard"/> </when> </choice> 
									<setBody> <simple>${header.OrgResBody}</simple> </setBody> <removeHeader 
									headerName="OrgResBody"></removeHeader> -->
                            </when>
                        </choice>
                        
                        
                        
                    </when>
                    
                    
                    
                    
                    <when id="_when17">
                        <simple>${header.methodId} == '2'</simple>
                        <setHeader headerName="OrgReqBody" id="_setHeader61">
                            <simple>${body}</simple>
                        </setHeader>
                        <choice id="_choice10">
                            <when id="_when18">
                                <simple>${header.DashBoard_Logging_Flag} == 'Y'</simple>
                                <!-- <wireTap uri="direct:smsServiceDashBoard" /> -->
                                <setBody id="_setBody25">
                                    <simple>{"Method_ID":"2","Layer_ID":"4","Request_Flag":"1","Response_Flag":"0","Correlation_Request":"${header.X-Correlation-Id}","Correlation_Session":"","Node_IP_Address": "{{esbHost}}","RequestIn": "${date:now:yyyy-MM-dd HH:mm:ss.SSS}","RequestOut": null,"Response_Message": "","Status_Code": "","Service_ID": "10"}</simple>
                                </setBody>
                                <to id="_to16" uri="seda:smsServiceDashBoard?waitForTaskToComplete=Never"/>
                            </when>
                        </choice>
                        <!--get OTP changes from DB -->
                        <setBody id="_setBody26">
                            <simple>${header.OrgReqBody}</simple>
                        </setBody>
                        <setHeader headerName="inputOtpPin" id="_setHeader62">
                            <jsonpath>$.VerifyParam.OtpPin</jsonpath>
                        </setHeader>
                        <setHeader headerName="DB_ID" id="_setHeader63">
                            <jsonpath>$.VerifyParam.RequestId</jsonpath>
                        </setHeader>
                        <!--get OTP changes from DB -->
                        <setHeader headerName="OTPVerifyQueue" id="_setHeader64">
                            <simple>{{OTPVerifyQueue}}</simple>
                        </setHeader>
                        <!-- <log message="getbody::::${header.getbody}"></log> -->
                        <choice id="_choice11">
                            <when id="_when19">
                                <simple>${header.OTPVerifyQueue} == 'Y'</simple>
                                <doTry id="_doTry11">
                                    <!-- <log message="OTP verify in Queue calling${body}"></log> -->
                                    <!-- <bean ref="queData" method="RetriveexternalQueData" /> -->
                                    <bean id="_bean23" method="process" ref="queData"/>
                                    <log id="_log63" message="remainingTime....${header.remainingTime}"/>
                                    <log id="_log64"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP OTP verify in Queue _${body}"/>
                                    <setHeader headerName="Content-Type" id="_setHeader65">
                                    <simple>application/json</simple>
                                    </setHeader>
                                    <doCatch id="_doCatch12">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log65" message="X-Correlation-Id_${header.X-Correlation-Id}|ESB_GenerateOTP Exception Occured in Queue__${exception.stacktrace}"/>
                                    <setHeader
                                    headerName="QueueTimeOutFlag" id="_setHeader66">
                                    <simple>1</simple>
                                    </setHeader>
                                    </doCatch>
                                </doTry>
                                <choice id="_choice12">
                                    <when id="_when20">
                                    <simple>${header.QueueTimeOutFlag} == '1'</simple>
                                    <log id="_log66" message="QueueTimeOutFlag__${header.QueueTimeOutFlag}"/>
                                    <log id="_log67" message="After Queue time out "/>
                                    <doTry id="_doTry12">
                                    <!-- <log message="OTP verify in Queue calling${body}"></log> -->
                                    <!-- <bean ref="queData" method="process" /> -->
                                    <!-- <log message="body....${body}"></log> -->
                                    <bean id="_bean24"
                                    method="RetriveexternalQueData" ref="queData"/>
                                    <log id="_log68" message="remainingTime1....${header.remainingTime}"/>
                                    <log id="_log69"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP OTP verify in ExternalQueue _${body}"/>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader67">
                                    <simple>application/json</simple>
                                    </setHeader>
                                    <doCatch id="_doCatch13">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log70" message="X-Correlation-Id_${header.X-Correlation-Id} | ESB_GenerateOTP Exception Occured in ExternalQueue__${exception.stacktrace}"/>
                                    <setHeader
                                    headerName="OTPVerifyQueue" id="_setHeader68">
                                    <simple>N</simple>
                                    </setHeader>
                                    </doCatch>
                                    </doTry>
                                    <choice id="_choice13">
                                    <when id="_when21">
                                    <simple>${header.ExtQueueTimeOutFlag} == '1'</simple>
                                    <log id="_log71" message="QueueTimeOutFlag__${header.ExtQueueTimeOutFlag}"/>
                                    <log id="_log72" message="remainingTime2....${header.remainingTime}"/>
                                    <setHeader
                                    headerName="OTPVerifyQueue" id="_setHeader69">
                                    <simple>N</simple>
                                    </setHeader>
                                    </when>
                                    </choice>
                                    </when>
                                </choice>
                            </when>
                            <otherwise id="_otherwise8">
                                <to id="_to17" uri="sql:select OtpPin,CustomerMobileNo from OtpGeneration where RequestId =:#${header.DB_ID} and datediff(MILLISECOND,OtpCreateDate,getdate()) &lt; :#${header.otpExpiaryTime}"/>
                                <to id="_to18" uri="log:DatabaseResult?showHeaders=true"/>
                                <bean id="_bean25" method="getOTP" ref="decOtpQue"/>
                                <setBody id="_setBody27">
                                    <simple>{"RequestId":"${header.DB_ID}","CustomerMobileNo":"${header.CustomerMobileNo}","OtpPin":"${header.OtpPin}"}</simple>
                                </setBody>
                                <log id="_log73" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP OTP verify in DataBase _${body}"/>
                                <log id="_log74" message="QueueExcFlag0000000000000__${header.QueueExcFlag}"/>
                                <setHeader headerName="OTPVerifyQueue" id="_setHeader70">
                                    <simple>Y</simple>
                                </setHeader>
                                <setHeader headerName="Content-Type" id="_setHeader71">
                                    <simple>application/json</simple>
                                </setHeader>
                            </otherwise>
                        </choice>
                        <choice id="_choice14">
                            <when id="_when22">
                                <simple>${header.OTPVerifyQueue} == 'N'</simple>
                                <to id="_to19" uri="sql:select OtpPin,CustomerMobileNo from OtpGeneration where RequestId =:#${header.DB_ID} and datediff(MILLISECOND,OtpCreateDate,getdate()) &lt; :#${header.otpExpiaryTime}"/>
                                <to id="_to20" uri="log:DatabaseResult?showHeaders=true"/>
                                <bean id="_bean26" method="getOTP" ref="decOtpQue"/>
                                <log id="_log75" message="OTP verify After Exception Occured in Queue"/>
                                <log id="_log76" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | OTP verify in DataBase After Exception Occured in Queue_${body}"/>
                                <setBody id="_setBody28">
                                    <simple>{"RequestId":"${header.DB_ID}","CustomerMobileNo":"${header.CustomerMobileNo}","OtpPin":"${header.OtpPin}"}</simple>
                                </setBody>
                                <setHeader headerName="Content-Type" id="_setHeader72">
                                    <simple>application/json</simple>
                                </setHeader>
                            </when>
                        </choice>
                        <setHeader headerName="Content-Type" id="_setHeader73">
                            <simple>application/json</simple>
                        </setHeader>
                        <choice id="_choice15">
                            <when id="_when23">
                                <simple>${header.getbody} == '0'</simple>
                                <!-- <bean ref="queData" method="process"/> -->
                                <log id="_log77" message="IN Second methodId::${header.DB_ID}"/>
                                <!-- <log message="QUEHEADER::${header.OtpPin}" /> -->
                                <setHeader headerName="customerMobNo" id="_setHeader74">
                                    <jsonpath>$.CustomerMobileNo</jsonpath>
                                </setHeader>
                                <setHeader headerName="OtpPin" id="_setHeader75">
                                    <jsonpath>$.OtpPin</jsonpath>
                                </setHeader>
                                <bean id="_bean27" method="decQueOtp" ref="decOtpQue"/>
                                <choice id="_choice16">
                                    <when id="_when24">
                                    <simple>${header.inputOtpPin} == ${header.queEncyOtp}</simple>
                                    <choice id="_choice17">
                                    <when id="_when25">
                                    <simple>${header.inputCustomerMobileNo} == ${header.customerMobNo}</simple>
                                    <log id="_log78" message="before query to update"/>
                                    <to id="_to21" uri="sql:select isConsumed from OtpGeneration where RequestId =:#${header.DB_ID}"/>
                                    <bean id="_bean28"
                                    method="getIsConsumed" ref="otpService"/>
                                    <choice id="_choice18">
                                    <when id="_when26">
                                    <simple>${header.isConsumed} == '0' or ${header.isConsumed} == '3'</simple>
                                    <setBody id="_setBody29">
                                    <simple>update OtpGeneration set isConsumed=1 ,OTPUpdatedDate=getDATE() where RequestId='${header.DB_ID}'</simple>
                                    </setBody>
                                    <to id="_to22" uri="jdbc:esbDataSource"/>
                                    <setBody id="_setBody30">
                                    <simple>{"AuthCode":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Verified Sucessfully","ResponseCode": "000"}</simple>
                                    </setBody>
                                    </when>
                                    <when id="_when27">
                                    <simple>${header.isConsumed} == '2'</simple>
                                    <setBody id="_setBody31">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP expired"}</simple>
                                    </setBody>
                                    </when>
                                    <when id="_when28">
                                    <simple>${header.isConsumed} == '1'</simple>
                                    <setBody id="_setBody32">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Consumed"}</simple>
                                    </setBody>
                                    </when>
                                    <otherwise id="_otherwise9"/>
                                    </choice>
                                    <!-- <to uri="sql:select isConsumed from OtpGeneration where 
													OtpPin =:#${header.OtpPin}" /> <bean ref="otpService" method="getIsConsumed" 
													/> -->
                                    <!-- <choice> <when></when> </choice> -->
                                    </when>
                                    <otherwise id="_otherwise10">
                                    <setBody id="_setBody33">
                                    <simple>
											${header.queJson}
										</simple>
                                    </setBody>
                                    <to id="_to23" uri="log:before?showHeaders=true"/>
                                    <!-- <to uri="activemq:queue:SMSQueue?timeToLive=${header.remainingTime}" 
													/> -->
                                    <setHeader
                                    headerName="uri" id="_setHeader76">
                                    <simple>
								 
						activemq:queue:SMSQueue?timeToLive=${header.remainingTime}&amp;exchangePattern=InOnly
													 </simple>
                                    </setHeader>
                                    <log id="_log79" message="URI::${header.uri}"/>
                                    <recipientList id="_recipientList1">
                                    <header>uri</header>
                                    </recipientList>
                                    <log id="_log80" message="Updating Missmatch OTP"/>
                                    <setBody id="_setBody34">
                                    <simple>update OtpGeneration set isConsumed=3 where RequestId='${header.DB_ID}'</simple>
                                    </setBody>
                                    <to id="_to24" uri="jdbc:esbDataSource"/>
                                    <setBody id="_setBody35">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Verification failed"}</simple>
                                    </setBody>
                                    </otherwise>
                                    </choice>
                                    </when>
                                    <otherwise id="_otherwise11">
                                    <choice id="_choice19">
                                    <when id="_when29">
                                    <simple>${header.queJson} != null</simple>
                                    <setBody id="_setBody36">
                                    <simple>
											${header.queJson}
									       	</simple>
                                    </setBody>
                                    <to id="_to25" uri="log:before?showHeaders=true"/>
                                    <doTry id="_doTry13">
                                    <!-- <to uri="activemq:queue:SMSQueue?timeToLive=${header.remainingTime}" 
														/> -->
                                    <setHeader
                                    headerName="uri" id="_setHeader77">
                                    <simple>
								 
						   activemq:queue:SMSQueue?timeToLive=${header.remainingTime}&amp;exchangePattern=InOnly
													 </simple>
                                    </setHeader>
                                    <log id="_log81" message="URI::${header.uri}"/>
                                    <recipientList id="_recipientList2">
                                    <header>uri</header>
                                    </recipientList>
                                    <doCatch id="_doCatch14">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log82" message="${exception.stacktrace}"/>
                                    </doCatch>
                                    </doTry>
                                    <log id="_log83" message="Updating Missmatch OTP"/>
                                    <setBody id="_setBody37">
                                    <simple>update OtpGeneration set isConsumed=3 where RequestId='${header.DB_ID}'</simple>
                                    </setBody>
                                    <to id="_to26" uri="jdbc:esbDataSource"/>
                                    </when>
                                    </choice>
                                    <setBody id="_setBody38">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Verification failed"}</simple>
                                    </setBody>
                                    </otherwise>
                                </choice>
                            </when>
                            <otherwise id="_otherwise12">
                                <!-- <log message="SQL::::${header.OtpPin}"/> -->
                                <to id="_to27" uri="sql:select isConsumed from OtpGeneration where RequestId =:#${header.DB_ID}"/>
                                <bean id="_bean29"
                                    method="getIsConsumed" ref="otpService"/>
                                <choice id="_choice20">
                                    <when id="_when30">
                                    <simple>${header.isConsumed} == '1'</simple>
                                    <setBody id="_setBody39">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Consumed"}</simple>
                                    </setBody>
                                    </when>
                                    <when id="_when31">
                                    <simple>${header.isConsumed} == '3'</simple>
                                    <setBody id="_setBody40">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Verification failed"}</simple>
                                    </setBody>
                                    </when>
                                    <when id="_when32">
                                    <simple>${header.isConsumed} == '0'</simple>
                                    <setBody id="_setBody41">
                                    <simple>update OtpGeneration set isConsumed=2 where RequestId='${header.DB_ID}'</simple>
                                    </setBody>
                                    <to id="_to28" uri="jdbc:esbDataSource"/>
                                    <setBody id="_setBody42">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP expired"}</simple>
                                    </setBody>
                                    </when>
                                    <when id="_when33">
                                    <simple>${header.isConsumed} == '2'</simple>
                                    <setBody id="_setBody43">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP expired"}</simple>
                                    </setBody>
                                    </when>
                                    <otherwise id="_otherwise13">
                                    <setBody id="_setBody44">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Verification failed"}</simple>
                                    </setBody>
                                    </otherwise>
                                </choice>
                            </otherwise>
                        </choice>
                        <setHeader headerName="DashBoardResponse" id="_setHeader78">
                            <jsonpath>$.ResponseCode</jsonpath>
                        </setHeader>
                        <choice id="_choice21">
                            <when id="_when34">
                                <simple>${header.DashBoardResponse} == '000'</simple>
                                <setHeader
                                    headerName="DashBoardResponse" id="_setHeader79">
                                    <simple>0</simple>
                                </setHeader>
                            </when>
                            <otherwise id="_otherwise14">
                                <setHeader
                                    headerName="DashBoardResponse" id="_setHeader80">
                                    <simple>1</simple>
                                </setHeader>
                            </otherwise>
                        </choice>
                        <setHeader headerName="OrgResBody" id="_setHeader81">
                            <simple>${body}</simple>
                        </setHeader>
                        <choice id="_choice22">
                            <when id="_when35">
                                <simple>${header.DashBoard_Logging_Flag} == 'Y'</simple>
                                <!-- <wireTap uri="direct:smsServiceDashBoard" /> -->
                                <setBody id="_setBody45">
                                    <simple>{"Method_ID":"2","Layer_ID":"4","Request_Flag":"0","Response_Flag":"1","Correlation_Request":"${header.X-Correlation-Id}","Correlation_Session":"","Node_IP_Address": "{{esbHost}}","RequestIn":null ,"RequestOut": "${date:now:yyyy-MM-dd HH:mm:ss.SSS}","Response_Message": "","Status_Code": "${header.DashBoardResponse}","Service_ID": "10"}</simple>
                                </setBody>
                                <to id="_to29" uri="seda:smsServiceDashBoard?waitForTaskToComplete=Never"/>
                            </when>
                        </choice>
                        <setBody id="_setBody46">
                            <simple>${header.OrgResBody}</simple>
                        </setBody>
                        <removeHeader headerName="OrgResBody" id="_removeHeader14"/>
                    </when>
                    <when id="_when36">
                        <simple>${header.methodId} == '3'</simple>
                        <setHeader headerName="ActualBody" id="_setHeader82">
                            <simple>${body}</simple>
                        </setHeader>
                        <setHeader headerName="templateId" id="_setHeader83">
                            <jsonpath>$.NotifyParam.TemplateId</jsonpath>
                        </setHeader>
                        <choice id="_choice23">
                            <when id="_when37">
                                <simple>${header.EventId} != '99'</simple>
                                <log id="_log84" message="when event id ${header.EventId}"/>
                                <log id="_log85" message="transactionId::::::${header.customerId}"/>
                                <to id="_to30" uri="sql:select MsgTemplate from MessageTemplate where TemplateId =:#${header.templateId} and SMSIdentifier =:#${header.SMSIdentifier}"/>
                                <log id="_log86" message="MSGTEMPLATE::::${body}"/>
                                <bean id="_bean30" method="getTemplete" ref="otpService"/>
                                <log id="_log87" message="Message Template:${header.MsgTemplate}"/>
                                <setBody id="_setBody47">
                                    <simple>${header.ActualBody}</simple>
                                </setBody>
                                <unmarshal id="_unmarshal3" ref="js"/>
                                <setHeader headerName="notifyParamBody" id="_setHeader84">
                                    <simple>${body[NotifyParam]}</simple>
                                </setHeader>
                                <setBody id="_setBody48">
                                    <simple>${header.notifyParamBody}</simple>
                                </setBody>
                                <marshal id="_marshal2" ref="js"/>
                                <unmarshal id="_unmarshal4" ref="js"/>
                                <setHeader headerName="MobileNo" id="_setHeader85">
                                    <simple>${body[@MobileNo]}</simple>
                                </setHeader>
                                <setHeader headerName="TransID" id="_setHeader86">
                                    <simple>${body[@TransID]}</simple>
                                </setHeader>
                                <setHeader headerName="CustID" id="_setHeader87">
                                    <simple>${body[@CustID]}</simple>
                                </setHeader>
                                <setHeader headerName="date" id="_setHeader88">
                                    <simple>${body[@Date]}</simple>
                                </setHeader>
                                <setHeader headerName="TotalINR" id="_setHeader89">
                                    <simple>${body[@TotalINR]}</simple>
                                </setHeader>
                                <setHeader headerName="accNo" id="_setHeader90">
                                    <simple>${body[@AccountNo]}</simple>
                                </setHeader>
                                <setHeader headerName="ChequeNo" id="_setHeader91">
                                    <simple>${body[@ChequeNo]}</simple>
                                </setHeader>
                                <setHeader headerName="NomineeName" id="_setHeader92">
                                    <simple>${body[@NomineeName]}</simple>
                                </setHeader>
                                <setHeader headerName="INR" id="_setHeader93">
                                    <simple>${body[@INR]}</simple>
                                </setHeader>
                                <setHeader headerName="Address" id="_setHeader94">
                                    <simple>${body[@Address]}</simple>
                                </setHeader>
                                <setHeader headerName="TranAmt" id="_setHeader95">
                                    <simple>${body[@TranAmt]}</simple>
                                </setHeader>
                                <setHeader headerName="TranDate" id="_setHeader96">
                                    <simple>${body[@TranDate]}</simple>
                                </setHeader>
                                <setHeader headerName="PanNo" id="_setHeader97">
                                    <simple>${body[@PanNo]}</simple>
                                </setHeader>
                                <setHeader headerName="Password" id="_setHeader98">
                                    <simple>${body[@Password]}</simple>
                                </setHeader>
                                <setHeader headerName="Days" id="_setHeader99">
                                    <simple>${body[@Days]}</simple>
                                </setHeader>
                                <setHeader headerName="emailID" id="_setHeader100">
                                    <simple>${body[@emailID]}</simple>
                                </setHeader>
                                <setHeader headerName="CustomerCareNo" id="_setHeader101">
                                    <simple>${body[@CustomerCareNo]}</simple>
                                </setHeader>
                                <setHeader headerName="MobileNo/EmailID" id="_setHeader102">
                                    <simple>${body[@MobileNo/EmailID]}</simple>
                                </setHeader>
                                <setHeader headerName="Name" id="_setHeader103">
                                    <simple>${body[@Name]}</simple>
                                </setHeader>
                                <setHeader headerName="AccountNo" id="_setHeader104">
                                    <simple>${body[@AccountNo]}</simple>
                                </setHeader>
                                <setHeader headerName="OTP" id="_setHeader105">
                                    <simple>${body[@OTP]}</simple>
                                </setHeader>
                                <setHeader headerName="ID" id="_setHeader106">
                                    <simple>${body[@ID]}</simple>
                                </setHeader>
                                <setHeader headerName="OldMobileNo" id="_setHeader107">
                                    <simple>${body[@OldMobileNo]}</simple>
                                </setHeader>
                                <setHeader headerName="CaseDecision" id="_setHeader108">
                                    <simple>${body[@CaseDecision]}</simple>
                                </setHeader>
                                <setHeader headerName="notifyDiscard" id="_setHeader109">
                                    <simple>${body[@notifyDiscard]}</simple>
                                </setHeader>
                                <setHeader headerName="servosysRefNo" id="_setHeader110">
                                    <simple>${body[@SRVRefno]}</simple>
                                </setHeader>
                                <setHeader headerName="srType" id="_setHeader111">
                                    <simple>${body[@SRType]}</simple>
                                </setHeader>
                                <setHeader headerName="AadharNo" id="_setHeader112">
                                    <simple>${body[@AadharNo]}</simple>
                                </setHeader>
                                <setHeader headerName="Accept" id="_setHeader113">
                                    <simple>${body[@Accept]}</simple>
                                </setHeader>
                                <setHeader headerName="AcctNo" id="_setHeader114">
                                    <simple>${body[@AcctNo]}</simple>
                                </setHeader>
                                <setHeader headerName="amountSmallCase" id="_setHeader115">
                                    <simple>${body[@amount]}</simple>
                                </setHeader>
                                <setHeader headerName="Approved" id="_setHeader116">
                                    <simple>${body[@Approved]}</simple>
                                </setHeader>
                                <setHeader headerName="BALamount" id="_setHeader117">
                                    <simple>${body[@BALamount]}</simple>
                                </setHeader>
                                <setHeader headerName="BenefiAccountNo" id="_setHeader118">
                                    <simple>${body[@BenefiAccountNo]}</simple>
                                </setHeader>
                                <setHeader headerName="Discard" id="_setHeader119">
                                    <simple>${body[@Discard]}</simple>
                                </setHeader>
                                <setHeader headerName="NewMobNo" id="_setHeader120">
                                    <simple>${body[@NewMobNo]}</simple>
                                </setHeader>
                                <setHeader headerName="Reason" id="_setHeader121">
                                    <simple>${body[@Reason]}</simple>
                                </setHeader>
                                <setHeader headerName="Rejected" id="_setHeader122">
                                    <simple>${body[@Rejected]}</simple>
                                </setHeader>
                                <setHeader headerName="Requestno" id="_setHeader123">
                                    <simple>${body[@Requestno]}</simple>
                                </setHeader>
                                <setHeader headerName="RevChargeamt" id="_setHeader124">
                                    <simple>${body[@RevChargeamt]}</simple>
                                </setHeader>
                                <!-- changes below done on 30112016 -->
                                <setHeader headerName="SRType" id="_setHeader125">
                                    <simple>${body[@SRType]}</simple>
                                </setHeader>
                                <setHeader headerName="SRVRefno" id="_setHeader126">
                                    <simple>${body[@SRVRefno]}</simple>
                                </setHeader>
                                <setHeader headerName="TranID" id="_setHeader127">
                                    <simple>${body[@TranID]}</simple>
                                </setHeader>
                                <setHeader headerName="UniqueID" id="_setHeader128">
                                    <simple>${body[@UniqueID]}</simple>
                                </setHeader>
                                <setHeader headerName="UserName" id="_setHeader129">
                                    <simple>${body[@UserName]}</simple>
                                </setHeader>
                                <setHeader headerName="Time" id="_setHeader130">
                                    <simple>${body[@Time]}</simple>
                                </setHeader>
                                <setHeader headerName="PolicyNo" id="_setHeader131">
                                    <simple>${body[@PolicyNo]}</simple>
                                </setHeader>
                                <setHeader headerName="DriverID" id="_setHeader132">
                                    <simple>${body[@DriverID]}</simple>
                                </setHeader>
                                <setHeader headerName="EMIAmount" id="_setHeader133">
                                    <simple>${body[@EMIAmount]}</simple>
                                </setHeader>
                                <setHeader headerName="URN" id="_setHeader134">
                                    <simple>${body[@URN]}</simple>
                                </setHeader>
                                <setHeader headerName="DriverName" id="_setHeader135">
                                    <simple>${body[@DriverName]}</simple>
                                </setHeader>
                                <setHeader headerName="custname" id="_setHeader136">
                                    <simple>${body[@custname]}</simple>
                                </setHeader>
                                <setHeader headerName="AiprayID" id="_setHeader137">
                                    <simple>${body[@AiprayID]}</simple>
                                </setHeader>
                                <setHeader headerName="OrderID" id="_setHeader138">
                                    <simple>${body[@OrderID]}</simple>
                                </setHeader>
                                <setHeader headerName="Amount" id="_setHeader139">
                                    <simple>${body[@Amount]}</simple>
                                </setHeader>
                                <setHeader headerName="CustMobileNo" id="_setHeader140">
                                    <simple>${body[@customermobileno]}</simple>
                                </setHeader>
                                <setHeader headerName="DistrictName" id="_setHeader141">
                                    <simple>${body[@District]}</simple>
                                </setHeader>
                                <setHeader headerName="RefID" id="_setHeader142">
                                    <simple>${body[@ReferenceID]}</simple>
                                </setHeader>
                                <setHeader headerName="policyName" id="_setHeader143">
                                    <simple>${body[@policyName]}</simple>
                                </setHeader>
                                <setHeader headerName="policyName" id="_setHeader144">
                                    <simple>${body[@policyName]}</simple>
                                </setHeader>
                                <setHeader headerName="MasterPolicyNo" id="_setHeader145">
                                    <simple>${body[@MasterPolicyNo]}</simple>
                                </setHeader>
                                <setHeader headerName="CustomerCareNo" id="_setHeader146">
                                    <simple>${body[@CustomerCareNo]}</simple>
                                </setHeader>
                                <setHeader headerName="Benename" id="_setHeader147">
                                    <simple>${body[@Benename]}</simple>
                                </setHeader>
                                <setHeader headerName="AgreementNo" id="_setHeader148">
                                    <simple>${body[@AgreementID]}</simple>
                                </setHeader>
                                <setHeader headerName="CardNumber" id="_setHeader149">
                                    <simple>${body[@CardNumber]}</simple>
                                </setHeader>
                                <setHeader headerName="Proposalno" id="_setHeader150">
                                    <simple>${body[@Proposalno]}</simple>
                                </setHeader>
                                <setHeader headerName="TransactionID" id="_setHeader151">
                                    <simple>${body[@TransactionID]}</simple>
                                </setHeader>
                                <setHeader headerName="productname" id="_setHeader152">
                                    <simple>${body[@productname]}</simple>
                                </setHeader>
                                <setHeader headerName="NoMaskAccountNo" id="_setHeader153">
                                    <simple>${body[@NoMaskAccountNo]}</simple>
                                </setHeader>
                                <bean id="_bean31"
                                    method="notificationReplacement" ref="otpService"/>
                            </when>
                            <!-- <bean ref="otpService" method="notificationReplacement" /> -->
                            <otherwise id="_otherwise15">
                                <log id="_log88" message="otherwise event id ${header.EventId}"/>
                                <setHeader headerName="replacedTemplate" id="_setHeader154">
                                    <jsonpath>$.NotifyParam.@Msg</jsonpath>
                                </setHeader>
                                <setBody id="_setBody49">
                                    <simple>${header.replacedTemplate}</simple>
                                </setBody>
                            </otherwise>
                        </choice>
                        <log id="_log89" message="MOBTEMPLATE:::IN VENDOR2222222"/>
                        <log id="_log90" message="msgTemplate:::${header.replacedTemplate}"/>
                        <removeHeaders id="_removeHeaders2" pattern="Camel*"/>
                        <to id="_to31" uri="sql:select MsgTemplate,FallbackFlag,VendorId from MessageTemplate where TemplateId =:#${header.templateId} and SMSIdentifier =:#${header.SMSIdentifier}"/>
                        <bean id="_bean32" method="getTemplete" ref="otpService"/>
                        <log id="_log91" message="venderidddd ${header.VendorId}"/>
                        <log id="_log92" message="Template.............. ${header.replacedTemplate}"/>
                        <when id="_when38">
                            <simple>${header.VendorId} == '1'</simple>
                            <setHeader headerName="message" id="_setHeader155">
                                <simple>
    &lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.ValueFirst_SMS_UserID2}' PASSWORD='${header.ValueFirst_SMS_PWD2}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.replacedTemplate}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.inputCustomerMobileNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                            </setHeader>
                            <setHeader headerName="userIdDb" id="_setHeader156">
                                <simple>${header.ValueFirst_SMS_UserID2}</simple>
                            </setHeader>
                            <doTry id="_doTry14">
                                <setHeader headerName="dbInMobileNumber" id="_setHeader157">
                                    <!-- used for db sms logging -->
                                    <simple>${header.inputCustomerMobileNo}</simple>
                                </setHeader>
                                <doCatch id="_doCatch15">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log93"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Error inputCustomerMobileNo  ie dbInMobileNumber not found"/>
                                </doCatch>
                            </doTry>
                            <bean id="_bean33" method="encodeURL" ref="otpService"/>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader158">
                                <constant>POST</constant>
                            </setHeader>
                            <!-- <removeHeader headerName="message"></removeHeader> -->
                            <setHeader headerName="Content-Type" id="_setHeader159">
                                <constant>application/x-www-form-urlencoded</constant>
                            </setHeader>
                            <!-- <log message="ValueFirst req ${body}" /> -->
                            <removeHeader headerName="Content-Length" id="_removeHeader15"/>
                            <removeHeader headerName="ActualBody" id="_removeHeader16"/>
                            <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
								/> -->
                            <removeHeader headerName="MsgTemplate" id="_removeHeader17"/>
                            <!--Call a method for fall back ###### -->
                            <to id="_to32" uri="log:before?showHeaders=true"/>
                            <log id="_log94" logName="com.fino.asynclog"
                                loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                            <to id="_to33" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                            <bean id="_bean34" method="getfallFlag" ref="otpService"/>
                            <when id="_when39">
                                <simple> ${header.FailureFlag == '1'}</simple>
                                <bean id="_bean35" method="gupShup" ref="otpService"/>
                                <setBody id="_setBody50">
                                    <simple>
     method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}
     &amp;V=1.1&amp;format=text&amp;mask=
     </simple>
                                </setBody>
                                <log id="_log95"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_"/>
                                <doTry id="_doTry15">
                                    <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
										/> -->
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader160">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <setHeader headerName="Content-Type" id="_setHeader161">
                                    <constant>application/x-www-form-urlencoded</constant>
                                    </setHeader>
                                    <to id="_to34" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{GUPSHUP_TIMEOUT}}&amp;httpClient.connectTimeout={{GUPSHUP_TIMEOUT}}"/>
                                    <doCatch id="_doCatch16">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log96"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="EXCEPTION  ${exception.stacktrace}"/>
                                    <setBody id="_setBody51">
                                    <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                    </setBody>
                                    </doCatch>
                                </doTry>
                            </when>
                            <otherwise id="_otherwise16">
                                <!-- <log message="ValueFirstres::::${body}" /> -->
                                <!-- <wireTap uri="direct:SMSDbLogging" /> -->
                                <log id="_log97" message="SMS_TO_BE_LOGGED_SENT_SUCESSFULLY_${header.replacedTemplate}_${header.customerMobNo}"/>
                                <setHeader headerName="Content-Type" id="_setHeader162">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody52">
                                    <simple>{"ResponseCode":"000","DisplayMessage":"Notification sent sucessfully"}</simple>
                                </setBody>
                                <to id="_to35" uri="seda:SMSDbLogging?waitForTaskToComplete=Never"/>
                            </otherwise>
                        </when>
                        <when id="_when40">
                            <simple>${header.VendorId} == '2'</simple>
                            <!-- <log message="GupshupBODY=====>>>${body}" /> -->
                            <bean id="_bean36" method="encodedStr" ref="otpService"/>
                            <setBody id="_setBody53">
                                <simple>
     method=SendMessage&amp;send_to=${header.inputCustomerMobileNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=
     </simple>
                            </setBody>
                            <removeHeader headerName="Content-Length" id="_removeHeader18"/>
                            <removeHeader headerName="ActualBody" id="_removeHeader19"/>
                            <removeHeader headerName="CustID" id="_removeHeader20"/>
                            <removeHeader
                                headerName="encodedGupshupMessage" id="_removeHeader21"/>
                            <removeHeader
                                headerName="inputCustomerMobileNo" id="_removeHeader22"/>
                            <removeHeader headerName="MesageTemplate" id="_removeHeader23"/>
                            <setHeader headerName="userIdDb" id="_setHeader163">
                                <simple>${header.GUPSHUP_SMS_UserID2}</simple>
                            </setHeader>
                            <doTry id="_doTry16">
                                <setHeader headerName="dbInMobileNumber" id="_setHeader164">
                                    <!-- used for db sms logging -->
                                    <simple>${header.inputCustomerMobileNo}</simple>
                                </setHeader>
                                <doCatch id="_doCatch17">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log98"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Error inputCustomerMobileNo  ie dbInMobileNumber not found"/>
                                    <setHeader
                                    headerName="dbInMobileNumber" id="_setHeader165">
                                    <!-- used for db sms logging -->
                                    <simple/>
                                    </setHeader>
                                </doCatch>
                            </doTry>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader166">
                                <constant>POST</constant>
                            </setHeader>
                            <!-- <to uri="http://enterprise.smsgupshup.com/GatewayAPI/rest?bridgeEndpoint=true" 
								/> -->
                            <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
								/> -->
                            <setHeader headerName="Content-Type" id="_setHeader167">
                                <constant>application/x-www-form-urlencoded</constant>
                            </setHeader>
                            <!-- === Call a method for fall back -->
                            <to id="_to36" uri="log:before?showHeaders=true"/>
                            <log id="_log99" logName="com.fino.asynclog"
                                loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_"/>
                            <to id="_to37" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{GUPSHUP_TIMEOUT}}&amp;httpClient.connectTimeout={{GUPSHUP_TIMEOUT}}"/>
                            <bean id="_bean37" method="getfallFlag" ref="otpService"/>
                            <when id="_when41">
                                <simple> ${header.FailureFlag == '1'}</simple>
                                <choice id="_choice24">
                                    <when id="_when42">
                                    <simple>${header.FallbackFlag} == '1' </simple>
                                    <bean id="_bean38"
                                    method="valueFirst" ref="otpService"/>
                                    <setHeader headerName="message" id="_setHeader168">
                                    <simple>

   
    &lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.ValueFirst_SMS_UserID2}' PASSWORD='${header.ValueFirst_SMS_PWD2}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                    </setHeader>
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader169">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader170">
                                    <constant>application/x-www-form-urlencoded</constant>
                                    </setHeader>
                                    <log id="_log100"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                                    <doTry id="_doTry17">
                                    <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
												/> -->
                                    <to id="_to38" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                    <doCatch id="_doCatch18">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log101"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="EXCEPTION  ${exception.stacktrace}"/>
                                    <setBody id="_setBody54">
                                    <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                    </setBody>
                                    </doCatch>
                                    </doTry>
                                    </when>
                                    <otherwise id="_otherwise17"/>
                                </choice>
                            </when>
                            <otherwise id="_otherwise18">
                                <!-- <log message="GupShupRes::::${body}" /> -->
                                <!-- <wireTap uri="direct:SMSDbLogging" /> -->
                                <log id="_log102" message="SMS_TO_BE_LOGGED_SENT_SUCESSFULLY_${header.replacedTemplate}_${header.customerMobNo}"/>
                                <setHeader headerName="Content-Type" id="_setHeader171">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody55">
                                    <simple>{"ResponseCode":"000","DisplayMessage":"Notification sent sucessfully"}</simple>
                                </setBody>
                                <to id="_to39" uri="seda:SMSDbLogging?waitForTaskToComplete=Never"/>
                            </otherwise>
                        </when>
                        <when id="_when43">
                            <simple>${header.VendorId} == '3'</simple>
                            <setHeader headerName="message" id="_setHeader172">
                                <simple>
    &lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.ValueFirst_SMS_UserID2}' PASSWORD='${header.ValueFirst_SMS_PWD2}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.replacedTemplate}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.inputCustomerMobileNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                            </setHeader>
                            <bean id="_bean39" method="encodeURL" ref="otpService"/>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader173">
                                <constant>POST</constant>
                            </setHeader>
                            <setHeader headerName="Content-Type" id="_setHeader174">
                                <constant>application/x-www-form-urlencoded</constant>
                            </setHeader>
                            <removeHeader headerName="Content-Length" id="_removeHeader24"/>
                            <removeHeader headerName="ActualBody" id="_removeHeader25"/>
                            <removeHeader headerName="message" id="_removeHeader26"/>
                            <removeHeader headerName="MsgTemplate" id="_removeHeader27"/>
                            <!-- <log message="Request for ValueFirst ${body}"></log> -->
                            <setHeader headerName="userIdDb" id="_setHeader175">
                                <simple>${header.ValueFirst_SMS_UserID2}</simple>
                            </setHeader>
                            <doTry id="_doTry18">
                                <setHeader headerName="dbInMobileNumber" id="_setHeader176">
                                    <!-- used for db sms logging -->
                                    <simple>${header.inputCustomerMobileNo}</simple>
                                </setHeader>
                                <doCatch id="_doCatch19">
                                    <exception>java.lang.Exception</exception>
                                    <setHeader
                                    headerName="dbInMobileNumber" id="_setHeader177">
                                    <!-- used for db sms logging -->
                                    <simple/>
                                    <log logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Error inputCustomerMobileNo  ie dbInMobileNumber not found"/>
                                    </setHeader>
                                </doCatch>
                            </doTry>
                            <to id="_to40" uri="log:before?showHeaders=true"/>
                            <log id="_log103"
                                logName="com.fino.asynclog"
                                loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                            <to id="_to41" uri="{{FINO_SMSVendor_ValueFirst}}?bridgeEndpoint=true"/>
                            <!-- <log message="GupshupBODY=====>>>${body}" /> -->
                            <log id="_log104" message="Response for ValueFirst ${body}"/>
                            <bean id="_bean40" method="encodedStr" ref="otpService"/>
                            <setBody id="_setBody56">
                                <simple>
     method=SendMessage&amp;send_to=${header.inputCustomerMobileNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=
     </simple>
                            </setBody>
                            <removeHeader headerName="Content-Length" id="_removeHeader28"/>
                            <removeHeader headerName="ActualBody" id="_removeHeader29"/>
                            <removeHeader headerName="CustID" id="_removeHeader30"/>
                            <removeHeader
                                headerName="encodedGupshupMessage" id="_removeHeader31"/>
                            <removeHeader
                                headerName="inputCustomerMobileNo" id="_removeHeader32"/>
                            <removeHeader headerName="MesageTemplate" id="_removeHeader33"/>
                            <!-- <log message="Request for GUPSHUP ${body}"></log> -->
                            <setHeader headerName="CamelHttpMethod" id="_setHeader178">
                                <constant>POST</constant>
                            </setHeader>
                            <!-- <to uri="http://enterprise.smsgupshup.com/GatewayAPI/rest?bridgeEndpoint=true" 
								/> -->
                            <setHeader headerName="Content-Type" id="_setHeader179">
                                <constant>application/x-www-form-urlencoded</constant>
                            </setHeader>
                            <!-- <log message="Response for GUPSHUP ${body}"></log> -->
                            <to id="_to42" uri="log:before?showHeaders=true"/>
                            <log id="_log105"
                                logName="com.fino.asynclog"
                                loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_"/>
                            <!-- <wireTap uri="direct:SMSDbLogging" /> -->
                            <to id="_to43" uri="{{FINO_SMSVendor_GupShup}}?bridgeEndpoint=true"/>
                            <setHeader headerName="Content-Type" id="_setHeader180">
                                <simple>application/json</simple>
                            </setHeader>
                            <setBody id="_setBody57">
                                <simple>{"ResponseCode":"000","DisplayMessage":"Notification sent sucessfully"}</simple>
                            </setBody>
                            <to id="_to44" uri="seda:SMSDbLogging?waitForTaskToComplete=Never"/>
                        </when>
                    </when>
                    <!-- method id 4 starts -->
                    <when id="_when44">
                        <simple>${header.methodId} == '4'</simple>
                        <log id="_log116" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Inside Resend Block Method Id 4"/>
                        <setHeader headerName="customerMobNo" id="_setHeader181">
                            <jsonpath>$.CustomerMobileNo</jsonpath>
                        </setHeader>
                        <!-- Placeholders for OTP -->
                        <doTry id="_doTry19">
                            <setHeader headerName="templateId" id="_setHeader182">
                                <jsonpath>$.NotifyParam.TemplateId</jsonpath>
                            </setHeader>
                            <doCatch id="_doCatch20">
                                <exception>java.lang.Exception</exception>
                                <log id="_log106" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Notify parameter not available"/>
                                <setHeader headerName="templateId" id="_setHeader183">
                                    <simple>42</simple>
                                </setHeader>
                            </doCatch>
                        </doTry>
                        <choice id="_choice25">
                            <when id="_when45">
                                <simple>${header.templateId.toString().trim()} == null or ${header.templateId.toString().trim().length()} == 0 </simple>
                                <setHeader headerName="templateId" id="_setHeader184">
                                    <simple>42</simple>
                                </setHeader>
                            </when>
                        </choice>
                        <setHeader headerName="orgBody" id="_setHeader185">
                            <simple>${body}</simple>
                        </setHeader>
                        <doTry id="_doTry20">
                            <unmarshal id="_unmarshal5" ref="js"/>
                            <setHeader headerName="notifyParamBody" id="_setHeader186">
                                <simple>${body[NotifyParam]}</simple>
                            </setHeader>
                            <setBody id="_setBody58">
                                <simple>${header.notifyParamBody}</simple>
                            </setBody>
                            <marshal id="_marshal3" ref="js"/>
                            <unmarshal id="_unmarshal6" ref="js"/>
                            <setHeader headerName="NotifyHeaders" id="_setHeader187">
                                <simple>${body}</simple>
                            </setHeader>
                            <doCatch id="_doCatch21">
                                <exception>java.lang.Exception</exception>
                                <log id="_log110" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP exception occured while getting notify headers : ${exception.stacktrace}"/>
                            </doCatch>
                        </doTry>
                        <!-- check for otp generated for number is consumed if not create a 
							new one -->
                        <setBody id="_setBody59">
                            <simple>${header.orgBody}</simple>
                        </setBody>
                        <!-- <to uri="sql:select top 1 isConsumed,OTPCreateDate,OtpPin,CustomerMobileNo 
							from OtpGeneration where CustomerMobileNo=:#${header.inputCustomerMobileNo} 
							order by [OTPCreateDate] desc" /> -->
                        <removeHeader headerName="orgBody" id="_removeHeader34"/>
                        <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
                        <to id="_to45" uri="sql:select top 1 isConsumed,OTPCreateDate,OtpPin,CustomerMobileNo,DATEDIFF(SECOND,[OTPCreateDate],CONVERT(VARCHAR(20), GETDATE()))+3 as OTPDateDiff from OtpGeneration with(nolock) where CustomerMobileNo=:#${header.inputCustomerMobileNo} order by [OTPCreateDate] desc"/>
                        <bean id="_bean41" method="getOtpGenerated" ref="otpService"/>
                        <!-- check for otp generated for number is consumed if not create a 
							new one block ends -->
                        <!-- <setHeader headerName="customerMobNo"> <jsonpath>$.CustomerMobileNo</jsonpath> 
							</setHeader> <doTry> <setHeader headerName="templateId"> <jsonpath>$.NotifyParam.TemplateId</jsonpath> 
							</setHeader> <doCatch> <exception>java.lang.Exception</exception> <log message="X-Correlation-Id_${header.X-Correlation-Id} 
							| UserId_${header.requestorId} | Exception created_${exception}" loggingLevel="INFO" 
							logName="com.fino.asynclog" /> <setHeader headerName="templateId"> <simple>42</simple> 
							</setHeader> </doCatch> </doTry> -->
                        <!-- <setHeader headerName="CamelRetrieveGeneratedKeys"> <simple>true</simple> 
							</setHeader> -->
                        <bean id="_bean42" method="decQueOtpFromDb" ref="decOtpQue"/>
                        <!-- #### It inserts CustomerMobileNo,OtpPin,OtpCreateDate,isConsumed 
							in OtpGeneration Table -->
                        <!-- <setBody> <simple>insert into OtpGeneration(CustomerMobileNo,OtpPin,OtpCreateDate,isConsumed) 
							values ('${header.customerMobNo}','${header.otpPin}',getDATE(),0)</simple> 
							</setBody> -->
                        <choice id="_choice26">
                            <when id="_when46">
                                <simple>${header.checkIsConsumed} == '0'  and ${header.inputCustomerMobileNo} == ${header.checkCustomerMobileNo}  and ${header.otpDateDiffFlag} == 'Y'</simple>
                                <setHeader headerName="otpPin" id="_setHeader188">
                                    <simple>${header.checkOtpPin}</simple>
                                </setHeader>
                            </when>
                            <otherwise id="_otherwise19">
                                <bean id="_bean43" method="getOtp" ref="otpService"/>
                                <setHeader headerName="otpPin" id="_setHeader189">
                                    <simple>${header.otpPin}</simple>
                                </setHeader>
                            </otherwise>
                        </choice>
                        <log id="_log116" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Resend SMS Template Value _${header.templateId}"/>
                        <bean id="_bean44"
                            method="setInsertQueryForResend" ref="otpService"/>
                        <setBody id="_setBody60">
                            <simple>${header.insQueryForResend}</simple>
                        </setBody>
                        <removeHeader headerName="insQueryForResend" id="_removeHeader35"/>
                        <to id="_to46" uri="jdbc:esbDataSource"/>
                        <to id="_to47" uri="sql:select top 1 RequestId,OtpPin from OtpGeneration where CustomerMobileNo =:#${header.customerMobNo} and isConsumed='0' and (datediff(ss,OtpCreateDate,getdate()) &lt; 180) order by OtpCreateDate desc "/>
                        <bean id="_bean48" method="getID" ref="otpService"/>
                        <removeHeader
                            headerName="CamelRetrieveGeneratedKeys" id="_removeHeader36"/>
                        <setHeader headerName="DB_ID" id="_setHeader190">
                            <simple>${header.DB_ID}</simple>
                        </setHeader>
                        <log id="_log117" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP DB_ID for method id 4:::::${header.DB_ID}"/>
                        <setBody id="_setBody61">
                            <simple>
							{"RequestId":"${header.DB_ID}",
							"CustomerMobileNo":"${header.customerMobNo}",
							"OtpPin":"${header.otpPin}"
							}
						    </simple>
                        </setBody>
                        <doTry id="_doTry21">
                            <!-- <setHeader headerName="templateId"> <simple>42</simple> </setHeader> -->
                            <to id="_to48" pattern="InOnly" uri="activemq:queue:SMSQueue?timeToLive={{otpExpiaryTime}}"/>
                            <doCatch id="_doCatch22">
                                <exception>java.lang.Exception</exception>
                                <log id="_log118" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP AMQ EXception occure for method id 4::${exception}"/>
                            </doCatch>
                        </doTry>
                        <to id="_to49" uri="sql:select MsgTemplate,FallbackFlag,VendorId,MsgTemplate_Hindi from MessageTemplate where TemplateId =:#${header.templateId} and SMSIdentifier =:#${header.SMSIdentifier}"/>
                        <bean id="_bean49" method="getTemplete" ref="otpService"/>
                        <setHeader headerName="encodedTempleteId" id="_setHeader191">
                            <simple>${header.MsgTemplate}</simple>
                        </setHeader>
                        <choice id="_choice27">
                            <when id="_when47">
                                <simple>${header.VendorId} == '1'</simple>
                                <log id="_log119" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP ResendSMS Vendor id is 1 GupShup"/>
                                  <bean id="_bean34" method="hindiSMSCheck" ref="otpService"/>
                                <choice>
                                  <when>
                                     <simple>${header.DoubleSMSFlag} == 'Y'</simple>
                                     <bean id="_bean46" method="notificationReplacementHindi" ref="otpService"/>
                                     <bean id="_bean13" method="gupShup" ref="otpService"/>
                                     <choice>
										<when>
											<simple>${header.encodedGupshupMessageHindi} != null and  ${header.encodedGupshupMessageHindi} != '' and ${header.encodedGupshupMessageHindi.length()} &gt; {{SMSLentgh}}</simple>
											<log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP ReSend Hindi SMS Length proper_GupShup " />
                                           <setBody id="_setBody13">
                                            <simple>method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessageHindi}&amp;msg_type=Unicode_Text&amp;userid=${header.GUPSHUP_SMS_UserID2}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_SMS_PWD2}&amp;V=1.1&amp;format=text&amp;mask=</simple>
                                           </setBody>  
                                           <setHeader headerName="CamelHttpMethod" id="_setHeader40">
                                             <constant>POST</constant>
                                           </setHeader>
                                           <setHeader headerName="Content-Type" id="_setHeader41">
                                             <constant>application/x-www-form-urlencoded</constant>
                                           </setHeader>
                                           <log id="_log38"  logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESEND REQUEST SEND TO GUPSHUP_VENDORForHindi"/>
                                           <to id="_to4900" uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}"/>
                                           <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESEND RESPONSE RECEIVED FROM GUPSHUP_VENDORForHindi_${body}" id="_log41" logName="com.fino.asynclog" loggingLevel="INFO"/>  
                                       </when>
                                       <otherwise>
									     <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Hindi SMS Not ReSend GupShup "/>
									   </otherwise>
                                   </choice>
                                  </when>
                                  </choice>
                                     <bean id="_bean50" method="gupShup" ref="otpService"/>
                                  <choice>
                                    <when>
                                       <simple>${header.encodedGupshupMessage} != null and  ${header.encodedGupshupMessage} != '' and ${header.encodedGupshupMessage.length()} &gt; {{SMSLentgh}}</simple>
                                          <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP ReSend English SMS Length proper_GupShup " />
                                          <setBody id="_setBody62">
                                             <simple>method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD}&amp;V=1.1&amp;format=text&amp;mask=</simple>
                                          </setBody>
                                          <setHeader headerName="CamelHttpMethod" id="_setHeader192">
                                              <constant>POST</constant>
                                          </setHeader>
                                          <setHeader headerName="Content-Type" id="_setHeader193">
                                             <constant>application/x-www-form-urlencoded</constant>
                                          </setHeader>
                                          <log id="_log120" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SENT TO GUPSHUP_VENDOR_forEnglish"/>
                                          <to id="_to50" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{GUPSHUP_TIMEOUT}}&amp;httpClient.connectTimeout={{GUPSHUP_TIMEOUT}}"/>
                                          <log id="_log121" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP  RESPONSE RECEIVED FROM GUPSGUP_VENDOR_forEnglish_${body}"/>
                                   </when>
                                 </choice>
                                <bean id="_bean51" method="getfallFlag" ref="otpService"/>
                                <when id="_when48">
                                    <simple>${header.FailureFlag} == '1'</simple>
                                      <choice id="_choice28">
                                         <when id="_when49">
                                             <simple>${header.FallbackFlag} == '1' </simple>
                                             <bean id="_bean52" method="valueFirst" ref="otpService"/>
                                             <setHeader headerName="message" id="_setHeader194">
                                               <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                             </setHeader>
                                   			 <setHeader headerName="CamelHttpMethod" id="_setHeader195">
                                                <constant>POST</constant>
                                             </setHeader>
                                             <setHeader headerName="Content-Type" id="_setHeader196">
                                                <constant>application/x-www-form-urlencoded</constant>
                                             </setHeader>
                                             <log id="_log122" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SENT TO VALUEFIRST_VENDOR_"/>
                                           <doTry id="_doTry22">
                                           <!-- ********** check ValueFirst response message -->
                                            <to id="_to51" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                            <log id="_log123" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM_VENDOR_${body}"/>
                                            <bean id="_bean53" method="checkVendorResponseCodeForValueFirst" ref="otpService"/>
                                            <doCatch id="_doCatch23">
                                                 <exception>java.lang.Exception</exception>
                                                 <log id="_log124" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP  method id 4 EXCEPTION  ${exception.stacktrace}"/>
                                                 <setBody id="_setBody63">
                                                    <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                                 </setBody>
                                           </doCatch>
                                        </doTry>
                                      </when>
                                      <otherwise id="_otherwise20"/>
                                      </choice>
                                   </when>
                                   <otherwise id="_otherwise21">
                                    <!-- <log message="GupShupRes::::${body}" /> -->
                                     <doTry id="_doTry23">
                                      <bean id="_bean54" method="getGupShupParameters" ref="otpService"/>
                                      <doCatch id="_doCatch24">
                                        <exception>java.lang.Exception</exception>
                                        <log id="_log125" message="exception : ${exception}"/>
                                      </doCatch>
                                    </doTry>
                                    <log id="_log126" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP gupShupParameter_${header.gupShupParameter}"/>
                                    <log id="_log127" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP  RESPONSE RECEIVED _${body}"/>
                                    <setHeader headerName="XCorrelationId" id="_setHeader197">
                                       <simple>${header.X-Correlation-Id}</simple>
                                    </setHeader>
                                    <doTry id="_doTry24">
                                      <log id="_log128" logName="com.fino.asynclog" loggingLevel="INFO" message="database GupShupRes log = X-Correlation-Id_${header.XCorrelationId} |  GUID =  ${header.guid}|  DBID = ${header.DB_ID}"/>
                                        <to id="_to52" uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} , GUID=:#${header.gupShupParameter} where RequestId=:#${header.DB_ID}"/>
                                        <doCatch id="_doCatch25">
                                          <exception>java.lang.Exception</exception>
                                          <log id="_log129" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP EXCEPTION GupShupRes  ${exception.stacktrace}"/>
                                        </doCatch>
                                    </doTry>
                                    <choice id="_choice29">
                                      <when id="_when50">
                                         <simple>${header.FailureFlag} == 0 or ${header.responseMessageValueFirst} == 0</simple>
                                         <setHeader headerName="Content-Type" id="_setHeader198">
                                           <simple>application/json</simple>
                                         </setHeader>
                                         <setBody id="_setBody64">
                                            <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                         </setBody>
                                      </when>
                                      <when id="_when51">
                                          <simple>${header.FailureFlag} == 1 or ${header.responseMessageValueFirst} == 1</simple>
                                      <setHeader headerName="Content-Type" id="_setHeader199">
                                         <simple>application/json</simple>
                                      </setHeader>
                                      <setBody id="_setBody65">
                                         <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Generation failed"}</simple>
                                      </setBody>
                                     </when>
                                     </choice>
                                 </otherwise>
                            </when>
                            <when id="_when52">
                                <simple>${header.VendorId} == '2'</simple>
                                 <bean id="_bean34" method="hindiSMSCheck" ref="otpService"/>
                                <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP ResendSMS DoubleSMSFlag  ${header.DoubleSMSFlag}"/>
                                <choice>
                                  <when>
                                     <simple>${header.DoubleSMSFlag} == 'Y'</simple>
                                      
                                      <bean id="_bean8" method="valuefirstHindi" ref="otpService"/>
                                      <choice>
										<when>
											<simple>${header.templeteMessageHindi} != null and  ${header.templeteMessageHindi} != '' and ${header.templeteMessageHindi.length()} &gt; {{SMSLentgh}}</simple>
											   <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ReSend SMS Length proper_VF " />
									  
									         <setHeader headerName="message" id="_setHeader30">
                                                 <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessageHindi}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                              </setHeader>
                                     		 <bean id="_bean9" method="encodeURL" ref="otpService"/>
                                    		<setHeader headerName="CamelHttpMethod" id="_setHeader31">
                                       			<constant>POST</constant>
                                    		</setHeader>
                                    		<setHeader headerName="Content-Type" id="_setHeader32">
                                     			 <constant>application/x-www-form-urlencoded</constant>
                                    		</setHeader>
                                    		<!-- Call a method for fall back -->
                                    		<log id="_log24" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Resend REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                                    		<to id="_to8" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                    		<log id="_log25" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Resend Response RECEIVED FROM VALUEFIRST_VENDOR"/>
									   </when>
									   <otherwise>
									     <log message="SMS Not Send ValueFirst "/>
									   </otherwise>
									  </choice>		   
                                  </when>
                                </choice>
                                
                                <bean id="_bean55" method="valueFirst" ref="otpService"/>
                                <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP Resend English SMS "></log>
                                <choice>
                                  <when>
                                      <simple>${header.templeteMessage} != null and  ${header.templeteMessage} != '' and ${header.templeteMessage.length()} &gt; {{SMSLentgh}}</simple>  
                                           <setHeader headerName="message" id="_setHeader200">
                                             <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                                	       </setHeader>
                                         <bean id="_bean56" method="encodeURL" ref="otpService"/>
                                         <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}"/> -->
                                         <setHeader headerName="CamelHttpMethod" id="_setHeader201">
                                           <constant>POST</constant>
                                         </setHeader>
                                         <setHeader headerName="Content-Type" id="_setHeader202">
                                           <constant>application/x-www-form-urlencoded</constant>
                                         </setHeader>
                                         <!-- Call a method for fall back -->
                                         <log id="_log131" logName="com.fino.asynclog" loggingLevel="INFO" message="method id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_for English SMS"/>
                                         <to id="_to53" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                          <log id="_log132" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE RECEIVED FROM VALUEFIRST_VENDOR_from English SMS_${body}"/>
                                  </when>
                                </choice>
                                <bean id="_bean57" method="getfallFlag" ref="otpService"/>
                                <log id="_log133" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP Resend English SMS failureflag::::${header.FailureFlag}"/>
                                <when id="_when53">
                                    <simple> ${header.FailureFlag} == '1'</simple>
                                    <bean id="_bean58" method="gupShup" ref="otpService"/>
                                    <setBody id="_setBody66">
                                    <simple>
								     method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD}
								     &amp;V=1.1&amp;format=text&amp;mask=
								     </simple>
                                    </setBody>
                                    <doTry id="_doTry25">
                                    <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
											/> -->
                                    <setHeader
                                    headerName="CamelHttpMethod" id="_setHeader203">
                                    <constant>POST</constant>
                                    </setHeader>
                                    <setHeader
                                    headerName="Content-Type" id="_setHeader204">
                                    <constant>application/x-www-form-urlencoded</constant>
                                    </setHeader>
                                    <!-- ********** check gupshup response message -->
                                    <log id="_log134"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="method id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_ for method id 4"/>
                                    <to id="_to54" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{GUPSHUP_TIMEOUT}}&amp;httpClient.connectTimeout={{GUPSHUP_TIMEOUT}}"/>
                                    <log id="_log135"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="method id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE RECEIVED FROM GUPSHUP_VENDOR_${body} for method id 4"/>
                                    <bean id="_bean59"
                                    method="checkVendorResponseCodeForGupshup" ref="otpService"/>
                                    <log id="_log136" message="responseMessageGupshup :${header.responseMessageGupshup}"/>
                                    <doCatch id="_doCatch26">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log137"
                                    logName="com.fino.asynclog"
                                    loggingLevel="INFO" message="method id 4 EXCEPTION  ${exception.stacktrace}"/>
                                    <setBody id="_setBody67">
                                    <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                    </setBody>
                                    </doCatch>
                                    </doTry>
                                </when>
                                <otherwise id="_otherwise22">
                                    <log message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} |ESB_GenerateOTP method id 4 ValueFirstres::::${body}" />
                                    <doTry id="_doTry26">
                                    	<setHeader headerName="guid" id="_setHeader205">
                                    		<xpath resultType="java.lang.String">/MESSAGEACK/GUID/@GUID</xpath>
                                    	</setHeader>
                                    	<doCatch id="_doCatch27">
                                    		<exception>java.lang.Exception</exception>
                                    		<log id="_log138" message="exception : ${exception}"/>
                                    	</doCatch>
                                    </doTry>
                                    <log id="_log139" logName="com.fino.asynclog" loggingLevel="INFO" message="GUID_${header.guid}"/>
                                    <setHeader headerName="XCorrelationId" id="_setHeader206">
                                    	<simple>${header.X-Correlation-Id}</simple>
                                    </setHeader>
                                    <doTry id="_doTry27">
                                    	<log id="_log141" logName="com.fino.asynclog"  loggingLevel="INFO" message="database log = X-Correlation-Id_${header.XCorrelationId} |  GUID =  ${header.guid}|  DBID = ${header.DB_ID}"/>
                                    	<to id="_to55" uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} , GUID=:#${header.guid} where RequestId=:#${header.DB_ID}"/>
                                    	<doCatch id="_doCatch28">
                                   			 <exception>java.lang.Exception</exception>
                                    		<log id="_log142" logName="com.fino.asynclog" loggingLevel="INFO" message="EXCEPTION  ${exception.stacktrace}"/>
                                    	</doCatch>
                                    </doTry>
                                    <choice id="_choice30">
                                    	<when id="_when54">
                                    		<simple>${header.FailureFlag} == 0 or ${header.responseMessageGupshup} == 0</simple>
                                    		<setHeader  headerName="Content-Type" id="_setHeader207">
                                    			<simple>application/json</simple>
                                    		</setHeader>
                                    		<setBody id="_setBody68">
                                    			<simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                    		</setBody>
                                    	</when>
                                    	<when id="_when55">
                                    		<simple>${header.FailureFlag} == 1 or ${header.responseMessageGupshup} == 1</simple>
                                    		<setHeader headerName="Content-Type" id="_setHeader208">
                                    			<simple>application/json</simple>
                                    		</setHeader>
                                    		<setBody id="_setBody69">
                                    			<simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Generation failed"}</simple>
                                    		</setBody>
                                    	</when>
                                    </choice>
                                </otherwise>
                            </when>
                            <when id="_when56">
                                <simple>${header.VendorId} == '9'</simple>
                                <removeHeaders id="_removeHeaders3" pattern="Camel*"/>
                                <!-- <wireTap uri="direct:smsServiceVendorCallForMethodId4" /> -->
                                <removeHeader headerName="charset" id="_removeHeader37"/>
                                <removeHeader
                                    headerName="org.restlet.http.headers" id="_removeHeader38"/>
                                <removeHeader
                                    headerName="org.restlet.startTime" id="_removeHeader39"/>
                                <to id="_to56" uri="seda:smsServiceVendorCallForMethodId4?waitForTaskToComplete=Never"/>
                                <setHeader headerName="Content-Type" id="_setHeader209">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody70">
                                    <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                </setBody>
                                <!-- <log message="Vendor id is 9"></log> <doTry> <bean ref="otpService" 
									method="valueFirst" /> <setHeader headerName="message"> <simple>&lt;?xml 
									version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE 
									VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS 
									UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS 
									FROM='FINOBK' TO='${header.inputCustomerMobileNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple> 
									</setHeader> <bean ref="otpService" method="encodeURL" /> <setHeader headerName="CamelHttpMethod"> 
									<constant>POST</constant> </setHeader> <setHeader headerName="Content-Type"> 
									<constant>application/x-www-form-urlencoded</constant> </setHeader> <log 
									message="method id 4 ValueFirst req ${body} for method id 4" /> <log message="method 
									id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} 
									| REQUEST SEND TO VALUEFIRST_VENDOR_${body} for method id 4" loggingLevel="INFO" 
									logName="com.fino.asynclog" /> <to uri="log:before?showHeaders=true"/> <to 
									uri="{{FINO_SMSVendor_ValueFirst}}?bridgeEndpoint=true" /> Call a method 
									for fall back <log message="method id 4 X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | RESPONSE FROM VALUEFIRST_VENDOR_${body} 
									for method id 4" loggingLevel="INFO" logName="com.fino.asynclog" /> <bean 
									ref="otpService" method="getfallFlag" /> <log message="failureflag::::${header.FailureFlag}"></log> 
									<setHeader headerName="FailureFlagForValueFirst"><simple>${header.FailureFlag}</simple></setHeader> 
									<when> <simple> ${header.FailureFlag} == '1'</simple> <bean ref="otpService" 
									method="gupShup" /> <setBody> <simple> method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD} 
									&amp;V=1.1&amp;format=text&amp;mask= </simple> </setBody> <doTry> <setHeader 
									headerName="CamelHttpMethod"> <constant>POST</constant> </setHeader> <setHeader 
									headerName="Content-Type"> <constant>application/x-www-form-urlencoded</constant> 
									</setHeader> <to uri="jetty:{{FINO_SMSVendor_GupShup}}?bridgeEndpoint=true" 
									/> ********** check gupshup response message <bean ref="otpService" method="checkVendorResponseCodeForGupshup"/> 
									<log message="responseMessageGupshup :${header.responseMessageGupshup}"></log> 
									<doCatch> <exception>java.lang.Exception</exception> <log message="method 
									id 4 EXCEPTION ${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog"></log> 
									<setBody> <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple> 
									</setBody> </doCatch> </doTry> </when> <otherwise> <log message="method id 
									4 ValueFirstres::::${body}" /> <doTry> <setHeader headerName="guid"> <xpath 
									resultType="java.lang.String"> /MESSAGEACK/GUID/@GUID </xpath> </setHeader> 
									<doCatch> <exception>java.lang.Exception</exception> <log message="${exception}"></log> 
									</doCatch> </doTry> <log message="GUID_${header.guid}" loggingLevel="INFO" 
									logName="com.fino.asynclog" /> <log message="X-Correlation-Id_${header.XCorrelationId} 
									| RESPONSE RECEIVED _${body}" loggingLevel="INFO" logName="com.fino.asynclog" 
									/> <setHeader headerName="XCorrelationId"> <simple>${header.X-Correlation-Id}</simple> 
									</setHeader> <doTry> <log message="database log = X-Correlation-Id_${header.XCorrelationId} 
									| GUID = ${header.guid}| DBID = ${header.DB_ID}" loggingLevel="INFO" logName="com.fino.asynclog" 
									/> <to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} 
									, GUID=:#${header.guid} where RequestId=:#${header.DB_ID}" /> <doCatch> <exception>java.lang.Exception</exception> 
									<log message="EXCEPTION ${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog"></log> 
									</doCatch> </doTry> <choice> <when> <simple>${header.FailureFlag} == 0 or 
									${header.responseMessageGupshup} == 0</simple> <setHeader headerName="Content-Type"> 
									<simple>application/json</simple> </setHeader> <setBody> <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP 
									Generated Successfully","ResponseCode":"000"}</simple> </setBody> </when> 
									<when> <simple>${header.FailureFlag} == 1 or ${header.responseMessageGupshup} 
									== 1</simple> <setHeader headerName="Content-Type"> <simple>application/json</simple> 
									</setHeader> <setBody> <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP 
									Generation failed"}</simple> </setBody> </when> </choice> </otherwise> <doCatch> 
									<exception>java.lang.Exception</exception> </doCatch> </doTry> <removeHeaders 
									pattern="Camel*"></removeHeaders> <doTry> <bean ref="otpService" method="gupShup" 
									/> <setBody> <simple> method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD} 
									&amp;V=1.1&amp;format=text&amp;mask= </simple> </setBody> <setHeader headerName="CamelHttpMethod"> 
									<constant>POST</constant> </setHeader> <setHeader headerName="Content-Type"> 
									<constant>application/x-www-form-urlencoded</constant> </setHeader> <log 
									message=" method id 4 for method id 4 X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_${body}" 
									loggingLevel="INFO" logName="com.fino.asynclog" /> <to uri="{{FINO_SMSVendor_GupShup}}?bridgeEndpoint=true" 
									/> <bean ref="otpService" method="getfallFlag" /> <log message="FailureFlag 
									: ${header.FailureFlag}"></log> <when> <simple> ${header.FailureFlag == '1'}</simple> 
									<choice> <when> <simple>${header.FallbackFlag} == '1' </simple> <bean ref="otpService" 
									method="valueFirst" /> <setHeader headerName="message"> <simple> &lt;?xml 
									version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE 
									VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS 
									UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS 
									FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple> 
									</setHeader> <setHeader headerName="CamelHttpMethod"> <constant>POST</constant> 
									</setHeader> <setHeader headerName="Content-Type"> <constant>application/x-www-form-urlencoded</constant> 
									</setHeader> <log message="method id 4 for method id 4 X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_${body}" 
									loggingLevel="INFO" logName="com.fino.asynclog" /> <doTry> <to uri="{{FINO_SMSVendor_ValueFirst}}?bridgeEndpoint=true" 
									/> ********** check ValueFirst response message <bean ref="otpService" method="checkVendorResponseCodeForValueFirst"/> 
									<log message="method id 4 for method id 4 X-Correlation-Id_${header.X-Correlation-Id} 
									| UserId_${header.requestorId} | RESPONSE FROM VALUEFIRST_VENDOR_${body}" 
									loggingLevel="INFO" logName="com.fino.asynclog" /> <doCatch> <exception>java.lang.Exception</exception> 
									<log message="method id 4 EXCEPTION ${exception.stacktrace}" loggingLevel="INFO" 
									logName="com.fino.asynclog"></log> <setBody> <simple>{"ReturnCode": "999", 
									"ResponseMessage": "Error occurred"}</simple> </setBody> </doCatch> </doTry> 
									</when> <otherwise></otherwise> </choice> </when> <otherwise> <log message="GupShupRes::::${body}" 
									/> <doTry> <bean ref="otpService" method="getGupShupParameters" /> <doCatch> 
									<exception>java.lang.Exception</exception> <log message="exception : ${exception}"/> 
									</doCatch> </doTry> <log message="gupShupParameter_${header.gupShupParameter}" 
									loggingLevel="INFO" logName="com.fino.asynclog" /> <log message="X-Correlation-Id_${header.XCorrelationId} 
									| RESPONSE RECEIVED _${body}" loggingLevel="INFO" logName="com.fino.asynclog" 
									/> <setHeader headerName="XCorrelationId"> <simple>${header.X-Correlation-Id}</simple> 
									</setHeader> <doTry> <log message="database GupShupRes log = X-Correlation-Id_${header.XCorrelationId} 
									| GUID = ${header.guid}| DBID = ${header.DB_ID}" loggingLevel="INFO" logName="com.fino.asynclog" 
									/> <to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} 
									, GUID=:#${header.gupShupParameter} where RequestId=:#${header.DB_ID}" /> 
									<doCatch> <exception>java.lang.Exception</exception> <log message="EXCEPTION 
									GupShupRes ${exception.stacktrace}" loggingLevel="INFO" logName="com.fino.asynclog"></log> 
									</doCatch> </doTry> <choice> <when> <simple>${header.FailureFlag} == 0 or 
									${header.responseMessageValueFirst} == 0 or ${header.FailureFlagForValueFirst} 
									== 0 or ${header.responseMessageGupshup} == 0</simple> <setHeader headerName="Content-Type"> 
									<simple>application/json</simple> </setHeader> <setBody> <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP 
									Generated Successfully","ResponseCode":"000"}</simple> </setBody> </when> 
									<when> <simple>${header.FailureFlag} == 1 or ${header.responseMessageValueFirst} 
									== 1 or ${header.FailureFlagForValueFirst} == 1 or ${header.responseMessageGupshup} 
									== 1</simple> <setHeader headerName="Content-Type"> <simple>application/json</simple> 
									</setHeader> <setBody> <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP 
									Generation failed"}</simple> </setBody> </when> </choice> </otherwise> <doCatch> 
									<exception>java.lang.Exception</exception> <log message="${exception.stacktrace}"></log> 
									</doCatch> </doTry> -->
                            </when>
                        </choice>
                    </when>
                    <!--method id 4 ends -->
                    <otherwise id="_otherwise23">
                        <setHeader headerName="Content-type" id="_setHeader210">
                            <simple>application/json</simple>
                        </setHeader>
                        <setBody id="_setBody71">
                            <simple>	
                {"returnCode":"1","responseMessage":"Invalide Method Id"}
                </simple>
                        </setBody>
                    </otherwise>
                </choice>
                <doCatch id="_doCatch29">
                    <exception>java.lang.Exception</exception>
                    <log id="_log143" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Exception Occurred_${exception}"/>
                    <log id="_log144" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Exception Occurred_${exception.stacktrace}"/>
                    <setHeader headerName="Content-type" id="_setHeader211">
                        <simple>application/json</simple>
                    </setHeader>
                    <setBody id="_setBody72">
                        <simple>{"returnCode":"999","responseMessage":"error Occurred"}</simple>
                    </setBody>
                </doCatch>
                <doFinally id="_doFinally2">
                    <log id="_log145" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE BODY SENT TO USER_${body}"/>
                    <removeHeaders excludePattern="breadcrumbId|Content-Type" id="_removeHeaders4" pattern="*"/>
                </doFinally>
            </doTry>
        </route>
        <route id="RT2_ESB_SMSLogging" streamCache="true">
            <!-- 	<from uri="direct:SMSDbLogging" /> -->
            <from id="_from2" uri="seda:SMSDbLogging?concurrentConsumers={{minConcurrentConsumers}}"/>
            <log id="_log146" logName="com.fino.asynclog" loggingLevel="INFO" message="inside sms for logging "/>
            <log id="_log147" logName="com.fino.asynclog" loggingLevel="INFO" message="values_${header.X-Correlation-Id}|${header.VendorId}|${header.templateId}| "/>
            <doTry id="_doTry28">
                <setBody id="_setBody73">
                    <simple>insert into SMSLOGGING(X_CORRELATION_ID,TEMPLATEID,VENDORID,MESSAGE,USERID,SMSCREATEDDATE,MOBILENUMBER) values  ('${header.X-Correlation-Id}','${header.templateId}','${header.VendorId}','${header.replacedTemplate}','${header.userIdDb}',getDATE(),'${header.dbInMobileNumber}')</simple>
                </setBody>
                <to id="_to57" uri="jdbc:esbDataSource"/>
                <doCatch id="_doCatch30">
                    <exception>java.lang.Exception</exception>
                    <log id="_log148" message="${exception.stacktrace} in smsdb logging"/>
                </doCatch>
            </doTry>
        </route>
        <!-- <route id="RT3_SMSService_Expire"> <from uri="direct:expiryRoute"/> 
			<bean ref="queData" method="removeFromQueue"></bean> Set OTP isConsumed Flag 
			to 2 (Expired) <setBody> <simple>update OtpGeneration set isConsumed=2 where 
			RequestId='${header.ExpiredRequestId}'</simple> </setBody> <to uri="jdbc:esbDataSource" 
			/> <removeHeader headerName="ExpiredRequestId"></removeHeader> </route> -->
        <route id="RT4_SMSService_DashBoardLogging">
            <!-- <from uri="direct:smsServiceDashBoard" /> -->
            <from id="_from3" uri="seda:smsServiceDashBoard?concurrentConsumers={{minConcurrentConsumers}}"/>
            <removeHeaders excludePattern="X-Correlation-Id|requestorId"
                id="_removeHeaders5" pattern="*"/>
            <setHeader headerName="Content-Type" id="_setHeader212">
                <simple>application/json</simple>
            </setHeader>
            <log id="_log149" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Request Sent To DashBoard Logging Service _${body}"/>
            <to id="_to58" uri="{{DashBoard_Logging_URL_{{currentSetup}}}}?headerFilterStrategy=#finoHeaderFilter&amp;httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{DEFAULT_TIMEOUT}}"/>
            <log id="_log150" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP Response Received From DashBoard Logging Service_${body}"/>
        </route>
        <!-- VendorId 9 async call -->
        <route id="RT5_SMSService_MethodIDOne_VendorCall">
            <!-- <from uri="direct:smsServiceVendorCall" /> -->
            <!-- <wireTap uri="direct:smsServiceVendor9Call" /> -->
            <from id="_from4" uri="seda:smsServiceVendorCall?concurrentConsumers={{minConcurrentConsumers}}"/>
            <log id="_log151" message="Inside wire tap for smsServiceVendorCall "/>
            <to id="_to59" uri="seda:smsServiceVendor9Call?waitForTaskToComplete=Never"/>
        </route>
        <route id="RT6_SMSService_Vendor9Call">
            <!-- <from uri="direct:smsServiceVendor9Call" /> -->
            <!--********** Call Value first Vendor start -->
            <!-- <wireTap uri="direct:smsServiceVendor9Call_ValueFirst" /> -->
            <!--********** Call Value GupShup Vendor start -->
            <!-- <wireTap uri="direct:smsServiceVendor9Call_GupShup" /> -->
            <from id="_from5" uri="seda:smsServiceVendor9Call?concurrentConsumers={{minConcurrentConsumers}}"/>
            <to id="_to60" uri="seda:smsServiceVendor9Call_ValueFirst?waitForTaskToComplete=Never"/>
            <to id="_to61" uri="seda:smsServiceVendor9Call_GupShup?waitForTaskToComplete=Never"/>
        </route>
        <!-- For VendorId 9 ValueFirst call when methodId is 1 -->
        <route id="RT7_SMSService_Vendor9Call1" streamCache="true">
            <!-- <from uri="direct:smsServiceVendor9Call_ValueFirst" /> -->
            <from id="_from6" uri="seda:smsServiceVendor9Call_ValueFirst?concurrentConsumers={{minConcurrentConsumers}}"/>
            <doTry id="_doTry29">
                <bean id="_bean60" method="valueFirst" ref="otpService"/>
                <setHeader headerName="message" id="_setHeader213">
                    <simple>
&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt; </simple>
                </setHeader>
                <bean id="_bean61" method="encodeURL" ref="otpService"/>
                <!-- <log message="ValueFirst req  ${body}" /> -->
                <removeHeaders id="_removeHeaders6" pattern="Camel*"/>
                <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
					/> -->
                <setHeader headerName="CamelHttpMethod" id="_setHeader214">
                    <constant>POST</constant>
                </setHeader>
                <setHeader headerName="Content-Type" id="_setHeader215">
                    <constant>application/x-www-form-urlencoded</constant>
                </setHeader>
                <!-- ********** check ValueFirst response message -->
                <log id="_log152" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_"/>
                <to id="_to62" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{DEFAULT_TIMEOUT}}&amp;httpClient.connectTimeout={{DEFAULT_TIMEOUT}}"/>
                <log id="_log153" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE RECEIVED FROM VALUEFIRST_VENDOR_${body}"/>
                <!--********** Call Value first Vendor end -->
                <bean id="_bean62" method="checkVendorResponseCodeForValueFirst" ref="otpService"/>
                <log id="_log154" message="responseMessageValueFirst :${header.responseMessageValueFirst}"/>
                <setHeader headerName="vendorResponse" id="_setHeader216">
                    <simple>${header.responseMessageValueFirst}</simple>
                </setHeader>
                <doTry id="_doTry30">
                    <!-- <log message="ValueFirstres::::${body}" /> -->
                    <!-- <to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.X-Correlation-Id} 
						, GUID=:#${header.guid} where RequestId=:#${header.DB_ID}" /> -->
                    <setHeader headerName="guid" id="_setHeader217">
                        <xpath resultType="java.lang.String">/MESSAGEACK/GUID/@GUID</xpath>
                    </setHeader>
                    <log id="_log155" logName="com.fino.asynclog" loggingLevel="INFO" message="database log = X-Correlation-Id_${header.X-Correlation-Id} |  GUID =  ${header.guid}|  DBID = ${header.DB_ID}"/>
                    <doCatch id="_doCatch31">
                        <exception>java.net.SocketTimeoutException</exception>
                        <setHeader headerName="CamelHttpResponseCode" id="_setHeader218">
                            <simple>998</simple>
                        </setHeader>
                        <log id="_log156" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                        <setBody id="_setBody74">
                            <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                        </setBody>
                    </doCatch>
                    <doCatch id="_doCatch32">
                        <exception>java.lang.Exception</exception>
                        <log id="_log157" logName="com.fino.asynclog" loggingLevel="INFO" message="EXCEPTION  ${exception.stacktrace}"/>
                    </doCatch>
                </doTry>
                <log id="_log158" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Before Insert Vendor Response"/>
                <doTry id="_doTry31">
                    <setBody id="_setBody75">
                        <simple>insert into VendorResponse(CustomerMobileNo,X_CORRELATION_ID,GUID,OTPCreateDate,vendorId,WireTapName) values ('${header.customerMobNo}','${header.X-Correlation-Id}','${header.guid}',getDATE(),'${header.VendorId}','VALUEFIRST')</simple>
                    </setBody>
                    <to id="_to63" uri="jdbc:esbDataSource"/>
                    <doCatch id="_doCatch33">
                        <exception>java.lang.Exception</exception>
                        <log id="_log159" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ${exception.stacktrace} in vendor insert"/>
                    </doCatch>
                </doTry>
                <doCatch id="_doCatch34">
                    <exception>java.lang.Exception</exception>
                    <log id="_log160" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_EXCEPTION ${exception.stacktrace}"/>
                </doCatch>
            </doTry>
            <setHeader headerName="DashBoardResponse" id="_setHeader219">
                <!-- <jsonpath>$.ResponseCode</jsonpath> -->
                <simple>${header.vendorResponse}</simple>
            </setHeader>
            <choice id="_choice031">
                <when id="_when057">
                    <simple>${header.DashBoardResponse} == '0'</simple>
                    <setHeader headerName="DashBoardResponse" id="_setHeader220">
                        <simple>0</simple>
                    </setHeader>
                </when>
                <otherwise id="_othe0rwise24">
                    <setHeader headerName="DashBoardResponse" id="_setHeader221">
                        <simple>1</simple>
                    </setHeader>
                </otherwise>
            </choice>
            <setHeader headerName="OrgResBody" id="_setHeader2220">
                <simple>${body}</simple>
            </setHeader>
            <choice id="_choice0302">
                <when id="_when058">
                    <simple>${header.DashBoard_Logging_Flag} == 'Y'</simple>
                    <!-- <wireTap uri="direct:smsServiceDashBoard" /> -->
                    <setBody id="_setBody76">
                        <simple>{"Method_ID":"1","Layer_ID":"4","Request_Flag":"0","Response_Flag":"1","Correlation_Request":"${header.X-Correlation-Id}","Correlation_Session":"","Node_IP_Address": "{{esbHost}}","RequestIn":null ,"RequestOut": "${date:now:yyyy-MM-dd HH:mm:ss.SSS}","Response_Message": "","Status_Code": "${header.DashBoardResponse}","Service_ID": "10"}</simple>
                    </setBody>
                    <to id="_to064" uri="seda:smsServiceDashBoard?waitForTaskToComplete=Never"/>
                </when>
            </choice>
            <setBody id="_setBody77">
                <simple>${header.OrgResBody}</simple>
            </setBody>
            <removeHeader headerName="OrgResBody" id="_removeHeader40"/>
        </route>
        <!-- For VendorId 9 GupShup call when methodId is 1 -->
        <route id="RT8_SMSService_Vendor9Call2" streamCache="true">
            <!-- <from uri="direct:smsServiceVendor9Call_GupShup" /> -->
            <from id="_from7" uri="seda:smsServiceVendor9Call_GupShup?concurrentConsumers={{minConcurrentConsumers}}"/>
            <doTry id="_doTry32">
                <!--********** SMS GupShup Vendor Call -->
                <bean id="_bean63" method="gupShup" ref="otpService"/>
                <setBody id="_setBody78">
                    <simple>method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD}
	     							&amp;V=1.1&amp;format=text&amp;mask=
	    							 </simple>
                </setBody>
                <removeHeaders id="_removeHeaders7" pattern="Camel*"/>
                <setHeader headerName="CamelHttpMethod" id="_setHeader223">
                    <constant>POST</constant>
                </setHeader>
                <setHeader headerName="Content-Type" id="_setHeader224">
                    <constant>application/x-www-form-urlencoded</constant>
                </setHeader>
                <log id="_log161" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_"/>
                <doTry id="_doTry33">
                    <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
						/> -->
                    <!-- ********** check gupshup response message -->
                    <to id="_to65" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{DEFAULT_TIMEOUT}}&amp;httpClient.connectTimeout={{DEFAULT_TIMEOUT}}"/>
                    <log id="_log162" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE RECEIVED FROM GUPSHUP_VENDOR_${body}"/>
                    <!--*********** Call GupShup Vendor end -->
                    <bean id="_bean64" method="checkVendorResponseCodeForGupshup" ref="otpService"/>
                    <log id="_log163" message="responseMessageGupshup :${header.responseMessageGupshup}"/>
                    <setHeader headerName="vendorResponse" id="_setHeader225">
                        <simple>${header.responseMessageGupshup}</simple>
                    </setHeader>
                    <doTry id="_doTry34">
                        <!--<to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.X-Correlation-Id} 
							, GUID=:#${header.gupShupParameter} where RequestId=:#${header.DB_ID}" /> -->
                        <bean id="_bean65" method="getGupShupParameters" ref="otpService"/>
                        <log id="_log164" message="gupShupParameter_${header.gupShupParameter}"/>
                        <log id="_log165" logName="com.fino.asynclog" loggingLevel="INFO" message="database GupShupRes log = X-Correlation-Id_${header.X-Correlation-Id} |  GUID =  ${header.guid}|  DBID = ${header.DB_ID}"/>
                        <doCatch id="_doCatch35">
                            <exception>java.lang.Exception</exception>
                            <log id="_log166" logName="com.fino.asynclog" loggingLevel="INFO" message="EXCEPTION GupShupRes  ${exception.stacktrace}"/>
                        </doCatch>
                    </doTry>
                    <log id="_log167" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Inserting in Vendor Response"/>
                    <doTry id="_doTry35">
                        <setBody id="_setBody79">
                            <simple>insert into VendorResponse(CustomerMobileNo,X_CORRELATION_ID,GUID,OTPCreateDate,vendorId,WireTapName) values ('${header.customerMobNo}','${header.X-Correlation-Id}','${header.gupShupParameter}',getDATE(),'${header.VendorId}','GUPSHUP')</simple>
                        </setBody>
                        <to id="_to66" uri="jdbc:esbDataSource"/>
                        <doCatch id="_doCatch36">
                            <exception>java.lang.Exception</exception>
                            <log id="_log168" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | Inserting in Vendor Response_${exception.stacktrace} in vendor insert"/>
                        </doCatch>
                    </doTry>
                    <doCatch id="_doCatch37">
                        <exception>java.net.SocketTimeoutException</exception>
                        <setHeader headerName="CamelHttpResponseCode" id="_setHeader226">
                            <simple>998</simple>
                        </setHeader>
                        <log id="_log169" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                        <setBody id="_setBody80">
                            <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                        </setBody>
                    </doCatch>
                    <doCatch id="_doCatch38">
                        <exception>java.lang.Exception</exception>
                        <log id="_log170" logName="com.fino.asynclog" loggingLevel="INFO" message="EXCEPTION  ${exception.stacktrace}"/>
                        <setBody id="_setBody81">
                            <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                        </setBody>
                    </doCatch>
                </doTry>
                <doCatch id="_doCatch39">
                    <exception>java.lang.Exception</exception>
                    <log id="_log171" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO GUPSHUP_VENDOR_EXCEPTION ${exception}"/>
                </doCatch>
            </doTry>
            <setHeader headerName="DashBoardResponse" id="_setHeader227">
                <!-- <jsonpath>$.ResponseCode</jsonpath> -->
                <simple>${header.vendorResponse}</simple>
            </setHeader>
            <choice id="_choice33">
                <when id="_when59">
                    <simple>${header.DashBoardResponse} == '0'</simple>
                    <setHeader headerName="DashBoardResponse" id="_setHeader228">
                        <simple>0</simple>
                    </setHeader>
                </when>
                <otherwise id="_otherwise25">
                    <setHeader headerName="DashBoardResponse" id="_setHeader229">
                        <simple>1</simple>
                    </setHeader>
                </otherwise>
            </choice>
            <setHeader headerName="OrgResBody" id="_setHeader230">
                <simple>${body}</simple>
            </setHeader>
            <choice id="_choice34">
                <when id="_when60">
                    <simple>${header.DashBoard_Logging_Flag} == 'Y'</simple>
                    <!-- <wireTap uri="direct:smsServiceDashBoard" /> -->
                    <setBody id="_setBody82">
                        <simple>{"Method_ID":"1","Layer_ID":"4","Request_Flag":"0","Response_Flag":"1","Correlation_Request":"${header.X-Correlation-Id}","Correlation_Session":"","Node_IP_Address": "{{esbHost}}","RequestIn":null ,"RequestOut": "${date:now:yyyy-MM-dd HH:mm:ss.SSS}","Response_Message": "","Status_Code": "${header.DashBoardResponse}","Service_ID": "10"}</simple>
                    </setBody>
                    <to id="_to67" uri="seda:smsServiceDashBoard?waitForTaskToComplete=Never"/>
                </when>
            </choice>
            <setBody id="_setBody83">
                <simple>${header.OrgResBody}</simple>
            </setBody>
            <removeHeader headerName="OrgResBody" id="_removeHeader41"/>
        </route>
        <!-- For VendorId 9 ValueFirst call when methodId is 4 -->
        <route id="RT9_SMSService_Vendor9Call2" streamCache="true">
            <!-- <from uri="direct:smsServiceVendorCallForMethodId4" /> -->
            <from id="_from8" uri="seda:smsServiceVendorCallForMethodId4?concurrentConsumers={{minConcurrentConsumers}}"/>
            <log id="_log172" message="Vendor id is 9"/>
            <doTry id="_doTry36">
                <bean id="_bean66" method="valueFirst" ref="otpService"/>
                <setHeader headerName="message" id="_setHeader231">
                    <simple>&lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='2' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.inputCustomerMobileNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                </setHeader>
                <!-- <log message="method id 4 ValueFirst req  ${body} for method id 4" /> -->
                <bean id="_bean67" method="encodeURL" ref="otpService"/>
                <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
					/> -->
                <setHeader headerName="CamelHttpMethod" id="_setHeader232">
                    <constant>POST</constant>
                </setHeader>
                <!-- Call a method for fall back -->
                <setHeader headerName="Content-Type" id="_setHeader233">
                    <constant>application/x-www-form-urlencoded</constant>
                </setHeader>
                <log id="_log173" logName="com.fino.asynclog" loggingLevel="INFO" message="method id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SEND TO VALUEFIRST_VENDOR_ for method id 4"/>
                <to id="_to68" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                <log id="_log174" logName="com.fino.asynclog" loggingLevel="INFO" message="method id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE FROM VALUEFIRST_VENDOR_${body} for method id 4"/>
                <bean id="_bean68" method="getfallFlag" ref="otpService"/>
                <log id="_log175" message="failureflag::::${header.FailureFlag}"/>
                <setHeader headerName="FailureFlagForValueFirst" id="_setHeader234">
                    <simple>${header.FailureFlag}</simple>
                </setHeader>
                <choice id="_choice35">
                    <when id="_when61">
                        <simple> ${header.FailureFlag} == '1'</simple>
                        <bean id="_bean69" method="gupShup" ref="otpService"/>
                        <setBody id="_setBody84">
                            <simple>
								     method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD}
								     &amp;V=1.1&amp;format=text&amp;mask=
								     </simple>
                        </setBody>
                        <doTry id="_doTry37">
                            <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
								/> -->
                            <setHeader headerName="CamelHttpMethod" id="_setHeader235">
                                <constant>POST</constant>
                            </setHeader>
                            <setHeader headerName="Content-Type" id="_setHeader236">
                                <constant>application/x-www-form-urlencoded</constant>
                            </setHeader>
                            <!-- ********** check gupshup response message -->
                            <log id="_log176" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SENT TO GUPSHUP_VENDOR_"/>
                            <to id="_to69" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{DEFAULT_TIMEOUT}}&amp;httpClient.connectTimeout={{DEFAULT_TIMEOUT}}"/>
                            <log id="_log177" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE RECEIVED FROM GUPSHUP_VENDOR_${body}"/>
                            <bean id="_bean70" method="checkVendorResponseCodeForGupshup" ref="otpService"/>
                            <log id="_log178" message="responseMessageGupshup :${header.responseMessageGupshup}"/>
                            <doCatch id="_doCatch40">
                                <exception>java.net.SocketTimeoutException</exception>
                                <setHeader
                                    headerName="CamelHttpResponseCode" id="_setHeader237">
                                    <simple>998</simple>
                                </setHeader>
                                <log id="_log179" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                                <setBody id="_setBody85">
                                    <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                                </setBody>
                            </doCatch>
                            <doCatch id="_doCatch41">
                                <exception>java.lang.Exception</exception>
                                <log id="_log180" logName="com.fino.asynclog" loggingLevel="INFO" message="method id 4 EXCEPTION  ${exception.stacktrace}"/>
                                <setBody id="_setBody86">
                                    <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                </setBody>
                            </doCatch>
                        </doTry>
                    </when>
                    <otherwise id="_otherwise26">
                        <!-- <log message="method id 4 ValueFirstres::::${body}" /> -->
                        <doTry id="_doTry38">
                            <setHeader headerName="guid" id="_setHeader238">
                                <xpath resultType="java.lang.String">
								   				 /MESSAGEACK/GUID/@GUID
								 				 </xpath>
                            </setHeader>
                            <doCatch id="_doCatch42">
                                <exception>java.lang.Exception</exception>
                                <log id="_log181" message="${exception}"/>
                            </doCatch>
                        </doTry>
                        <log id="_log182" logName="com.fino.asynclog" loggingLevel="INFO" message="GUID_${header.guid}"/>
                        <log id="_log183" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.XCorrelationId} |  RESPONSE RECEIVED _${body}"/>
                        <setHeader headerName="XCorrelationId" id="_setHeader239">
                            <simple>${header.X-Correlation-Id}</simple>
                        </setHeader>
                        <doTry id="_doTry39">
                            <log id="_log184" logName="com.fino.asynclog" loggingLevel="INFO" message="database log = X-Correlation-Id_${header.XCorrelationId} |  GUID =  ${header.guid}|  DBID = ${header.DB_ID}"/>
                            <to id="_to70" uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} , GUID=:#${header.guid} where RequestId=:#${header.DB_ID}"/>
                            <doCatch id="_doCatch43">
                                <exception>java.lang.Exception</exception>
                                <log id="_log185" logName="com.fino.asynclog" loggingLevel="INFO" message="EXCEPTION  ${exception.stacktrace}"/>
                            </doCatch>
                        </doTry>
                        <choice id="_choice36">
                            <when id="_when62">
                                <simple>${header.FailureFlag} == 0 or ${header.responseMessageGupshup} == 0</simple>
                                <setHeader headerName="Content-Type" id="_setHeader240">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody87">
                                    <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                                </setBody>
                            </when>
                            <when id="_when63">
                                <simple>${header.FailureFlag} == 1 or ${header.responseMessageGupshup} == 1</simple>
                                <setHeader headerName="Content-Type" id="_setHeader241">
                                    <simple>application/json</simple>
                                </setHeader>
                                <setBody id="_setBody88">
                                    <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Generation failed"}</simple>
                                </setBody>
                            </when>
                        </choice>
                    </otherwise>
                </choice>
                <doCatch id="_doCatch44">
                    <exception>java.net.SocketTimeoutException</exception>
                    <setHeader headerName="CamelHttpResponseCode" id="_setHeader242">
                        <simple>998</simple>
                    </setHeader>
                    <log id="_log186" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                    <setBody id="_setBody89">
                        <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                    </setBody>
                </doCatch>
                <doCatch id="_doCatch45">
                    <exception>java.lang.Exception</exception>
                    <log id="_log187" message="Exception occured : ${exception.stacktrace}"/>
                </doCatch>
            </doTry>
            <removeHeaders id="_removeHeaders8" pattern="Camel*"/>
            <doTry id="_doTry40">
                <bean id="_bean71" method="gupShup" ref="otpService"/>
                <setBody id="_setBody90">
                    <simple>
	     method=SendMessage&amp;send_to=${header.customerMobNo}&amp;msg=${header.encodedGupshupMessage}&amp;msg_type=text&amp;userid=${header.GUPSHUP_MESSAGE_USERNAME}&amp;auth_scheme=plain&amp;password=${header.GUPSHUP_MESSAGE_PASSWORD}
	     &amp;V=1.1&amp;format=text&amp;mask=
	     </simple>
                </setBody>
                <!-- <to uri="{{FINO_SMSVendor_GupShup}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{GUPSHUP_TIMEOUT}}" 
					/> -->
                <setHeader headerName="CamelHttpMethod" id="_setHeader243">
                    <constant>POST</constant>
                </setHeader>
                <setHeader headerName="Content-Type" id="_setHeader244">
                    <constant>application/x-www-form-urlencoded</constant>
                </setHeader>
                <log id="_log188" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | REQUEST SENT TO GUPSHUP_VENDOR_"/>
                <to id="_to71" uri="{{FINO_SMSVendor_GupShup_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{DEFAULT_TIMEOUT}}&amp;httpClient.connectTimeout={{DEFAULT_TIMEOUT}}"/>
                <log id="_log189" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE RECEIVED FROM GUPSHUP_VENDOR_${body}"/>
                <bean id="_bean72" method="getfallFlag" ref="otpService"/>
                <log id="_log190" message="FailureFlag : ${header.FailureFlag}"/>
                <when id="_when64">
                    <simple> ${header.FailureFlag == '1'}</simple>
                    <choice id="_choice37">
                        <when id="_when65">
                            <simple>${header.FallbackFlag} == '1' </simple>
                            <bean id="_bean73" method="valueFirst" ref="otpService"/>
                            <setHeader headerName="message" id="_setHeader245">
                                <simple>
  							 	 &lt;?xml version='1.0' encoding='ISO-8859-1'?&gt;&lt;DOCTYPE MESSAGE SYSTEM 'http://127.0.0.1:80/psms/dtd/messagev12.dtd'&gt;&lt;MESSAGE VER='1.2'&gt;&lt;USER USERNAME='${header.OTP_MESSAGE_USERNAME}' PASSWORD='${header.OTP_MESSAGE_PASSWORD}'/&gt;&lt;SMS UDH='0' CODING='1' TEXT='${header.templeteMessage}' PROPERTY='0' ID='1'&gt;&lt;ADDRESS FROM='FINOBK' TO='${header.customerMobNo}' SEQ='1' TAG=''/&gt;&lt;/SMS&gt;&lt;/MESSAGE&gt;</simple>
                            </setHeader>
                            <setHeader headerName="CamelHttpMethod" id="_setHeader246">
                                <constant>POST</constant>
                            </setHeader>
                            <setHeader headerName="Content-Type" id="_setHeader247">
                                <constant>application/x-www-form-urlencoded</constant>
                            </setHeader>
                            <log id="_log191" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP REQUEST SENT TO VALUEFIRST_VENDOR_"/>
                            <doTry id="_doTry41">
                                <!-- <to uri="{{FINO_SMSVendor_ValueFirst}}?httpClientConfigurerRef=myHttpClientConfigurer&amp;httpClient.soTimeout={{VALUEFIRST_TIMEOUT}}" 
									/> -->
                                <!-- ********** check ValueFirst response message -->
                                <to id="_to72" uri="{{FINO_SMSVendor_ValueFirst_NEW}}?throwExceptionOnFailure=false&amp;httpClient.socketTimeout={{VALUEFIRST_TIMEOUT}}&amp;httpClient.connectTimeout={{VALUEFIRST_TIMEOUT}}"/>
                                <log id="_log192" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE RECEIVED FROM VALUEFIRST_VENDOR_${body}"/>
                                <bean id="_bean74" method="checkVendorResponseCodeForValueFirst" ref="otpService"/>
                                <log id="_log193" logName="com.fino.asynclog" loggingLevel="INFO" message="method id 4  for method id 4 X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | RESPONSE FROM VALUEFIRST_VENDOR_${body}"/>
                                <doCatch id="_doCatch46">
                                    <exception>java.net.SocketTimeoutException</exception>
                                    <setHeader headerName="CamelHttpResponseCode" id="_setHeader248">
                                    <simple>998</simple>
                                    </setHeader>
                                    <log id="_log194" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                                    <setBody id="_setBody91">
                                    <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                                    </setBody>
                                </doCatch>
                                <doCatch id="_doCatch47">
                                    <exception>java.lang.Exception</exception>
                                    <log id="_log195" logName="com.fino.asynclog" loggingLevel="INFO" message="method id 4 EXCEPTION  ${exception.stacktrace}"/>
                                    <setBody id="_setBody92">
                                    <simple>{"ReturnCode": "999", "ResponseMessage": "Error occurred"}</simple>
                                    </setBody>
                                </doCatch>
                            </doTry>
                        </when>
                        <otherwise id="_otherwise27"/>
                    </choice>
                </when>
                <otherwise id="_otherwise28">
                    <!-- <log message="GupShupRes::::${body}" /> -->
                    <doTry id="_doTry42">
                        <bean id="_bean75" method="getGupShupParameters" ref="otpService"/>
                        <doCatch id="_doCatch48">
                            <exception>java.lang.Exception</exception>
                            <log id="_log196" message="exception : ${exception}"/>
                        </doCatch>
                    </doTry>
                    <log id="_log197" logName="com.fino.asynclog" loggingLevel="INFO" message="gupShupParameter_${header.gupShupParameter}"/>
                    <log id="_log198" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.XCorrelationId} |  RESPONSE RECEIVED _${body}"/>
                    <setHeader headerName="XCorrelationId" id="_setHeader249">
                        <simple>${header.X-Correlation-Id}</simple>
                    </setHeader>
                    <doTry id="_doTry43">
                        <!-- <to uri="sql:update OtpGeneration set X_Correlation_Id=:#${header.XCorrelationId} 
							, GUID=:#${header.gupShupParameter} where RequestId=:#${header.DB_ID}" /> -->
                        <log id="_log199" logName="com.fino.asynclog" loggingLevel="INFO" message="database GupShupRes log = X-Correlation-Id_${header.XCorrelationId} |  GUID =  ${header.guid}|  DBID = ${header.DB_ID}"/>
                        <setBody id="_setBody93">
                            <simple>insert into VendorResponse(CustomerMobileNo,X_CORRELATION_ID,GUID,OTPCreateDate,vendorId,WireTapName) values ('${header.customerMobNo}','${header.X-Correlation-Id}','${header.guid}',getDATE(),'4','GUPSHUP')</simple>
                        </setBody>
                        <to id="_to73" uri="jdbc:esbDataSource"/>
                        <doCatch id="_doCatch49">
                            <exception>java.lang.Exception</exception>
                            <log id="_log200" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.XCorrelationId} | ESB_GenerateOTP EXCEPTION GupShupRes  ${exception.stacktrace}"/>
                        </doCatch>
                    </doTry>
                    <choice id="_choice38">
                        <when id="_when66">
                            <simple>${header.FailureFlag} == 0 or ${header.responseMessageValueFirst} == 0 or ${header.FailureFlagForValueFirst} == 0 or ${header.responseMessageGupshup} == 0</simple>
                            <setHeader headerName="Content-Type" id="_setHeader250">
                                <simple>application/json</simple>
                            </setHeader>
                            <setBody id="_setBody94">
                                <simple>{"RequestId":"${header.DB_ID}","ResponseMessage":"Info","DisplayMessage":"OTP Generated Successfully","ResponseCode":"000"}</simple>
                            </setBody>
                        </when>
                        <when id="_when67">
                            <simple>${header.FailureFlag} == 1 or ${header.responseMessageValueFirst} == 1 or ${header.FailureFlagForValueFirst} == 1 or ${header.responseMessageGupshup} == 1</simple>
                            <setHeader headerName="Content-Type" id="_setHeader251">
                                <simple>application/json</simple>
                            </setHeader>
                            <setBody id="_setBody95">
                                <simple>{"ResponseCode":"001","ResponseMessage":"Info","DisplayMessage":"OTP Generation failed"}</simple>
                            </setBody>
                        </when>
                    </choice>
                </otherwise>
                <doCatch id="_doCatch50">
                    <exception>java.net.SocketTimeoutException</exception>
                    <setHeader headerName="CamelHttpResponseCode" id="_setHeader252">
                        <simple>998</simple>
                    </setHeader>
                    <log id="_log201" logName="com.fino.asynclog" loggingLevel="INFO" message="X-Correlation-Id_${header.X-Correlation-Id} | UserId_${header.requestorId} | ESB_GenerateOTP RESPONSE Exception Occured_${exception.stacktrace} "/>
                    <setBody id="_setBody96">
                        <simple>{"ReturnCode": "998", "ResponseMessage": "Time out"}</simple>
                    </setBody>
                </doCatch>
                <doCatch id="_doCatch51">
                    <exception>java.lang.Exception</exception>
                    <log id="_log202" message="X-Correlation-Id_${header.XCorrelationId} |${exception.stacktrace}"/>
                </doCatch>
            </doTry>
        </route>
    </camelContext>
</blueprint>


